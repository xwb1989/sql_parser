// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// forceEOF forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling forceEOF will make the lexer
// return EOF early.
func forceEOF(yylex interface{}) {
	yylex.(*Tokenizer).ForceEOF = true
}

//line sql.y:53
type yySymType struct {
	yys               int
	empty             struct{}
	statement         Statement
	selStmt           SelectStatement
	ddl               *DDL
	ins               *Insert
	byt               byte
	bytes             []byte
	bytes2            [][]byte
	str               string
	strs              []string
	selectExprs       SelectExprs
	selectExpr        SelectExpr
	columns           Columns
	partitions        Partitions
	colName           *ColName
	tableExprs        TableExprs
	tableExpr         TableExpr
	joinCondition     JoinCondition
	tableName         TableName
	tableNames        TableNames
	indexHints        *IndexHints
	expr              Expr
	exprs             Exprs
	boolVal           BoolVal
	colTuple          ColTuple
	values            Values
	valTuple          ValTuple
	subquery          *Subquery
	whens             []*When
	when              *When
	orderBy           OrderBy
	order             *Order
	limit             *Limit
	updateExprs       UpdateExprs
	setExprs          SetExprs
	updateExpr        *UpdateExpr
	setExpr           *SetExpr
	colIdent          ColIdent
	tableIdent        TableIdent
	convertType       *ConvertType
	aliasedTableName  *AliasedTableExpr
	TableSpec         *TableSpec
	columnType        ColumnType
	colKeyOpt         ColumnKeyOption
	optVal            *SQLVal
	LengthScaleOption LengthScaleOption
	columnDefinition  *ColumnDefinition
	indexDefinition   *IndexDefinition
	indexInfo         *IndexInfo
	indexOption       *IndexOption
	indexOptions      []*IndexOption
	indexColumn       *IndexColumn
	indexColumns      []*IndexColumn
	partDefs          []*PartitionDefinition
	partDef           *PartitionDefinition
	partSpec          *PartitionSpec
	vindexParam       VindexParam
	vindexParams      []VindexParam
	showFilter        *ShowFilter
	over              *Over
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const OF = 57375
const VALUES = 57376
const LAST_INSERT_ID = 57377
const NEXT = 57378
const VALUE = 57379
const SHARE = 57380
const MODE = 57381
const SQL_NO_CACHE = 57382
const SQL_CACHE = 57383
const JOIN = 57384
const STRAIGHT_JOIN = 57385
const LEFT = 57386
const RIGHT = 57387
const INNER = 57388
const OUTER = 57389
const CROSS = 57390
const NATURAL = 57391
const USE = 57392
const FORCE = 57393
const ON = 57394
const USING = 57395
const ID = 57396
const HEX = 57397
const STRING = 57398
const INTEGRAL = 57399
const FLOAT = 57400
const HEXNUM = 57401
const VALUE_ARG = 57402
const LIST_ARG = 57403
const COMMENT = 57404
const COMMENT_KEYWORD = 57405
const BIT_LITERAL = 57406
const NULL = 57407
const TRUE = 57408
const FALSE = 57409
const OR = 57410
const AND = 57411
const NOT = 57412
const BETWEEN = 57413
const CASE = 57414
const WHEN = 57415
const THEN = 57416
const ELSE = 57417
const END = 57418
const LE = 57419
const GE = 57420
const NE = 57421
const NULL_SAFE_EQUAL = 57422
const IS = 57423
const LIKE = 57424
const REGEXP = 57425
const IN = 57426
const SHIFT_LEFT = 57427
const SHIFT_RIGHT = 57428
const DIV = 57429
const MOD = 57430
const UNARY = 57431
const COLLATE = 57432
const BINARY = 57433
const UNDERSCORE_BINARY = 57434
const INTERVAL = 57435
const JSON_EXTRACT_OP = 57436
const JSON_UNQUOTE_EXTRACT_OP = 57437
const CREATE = 57438
const ALTER = 57439
const DROP = 57440
const RENAME = 57441
const ANALYZE = 57442
const ADD = 57443
const SCHEMA = 57444
const TABLE = 57445
const INDEX = 57446
const VIEW = 57447
const TO = 57448
const IGNORE = 57449
const IF = 57450
const UNIQUE = 57451
const PRIMARY = 57452
const COLUMN = 57453
const CONSTRAINT = 57454
const SPATIAL = 57455
const FULLTEXT = 57456
const FOREIGN = 57457
const KEY_BLOCK_SIZE = 57458
const SHOW = 57459
const DESCRIBE = 57460
const EXPLAIN = 57461
const DATE = 57462
const ESCAPE = 57463
const REPAIR = 57464
const OPTIMIZE = 57465
const TRUNCATE = 57466
const MAXVALUE = 57467
const PARTITION = 57468
const REORGANIZE = 57469
const LESS = 57470
const THAN = 57471
const PROCEDURE = 57472
const TRIGGER = 57473
const VINDEX = 57474
const VINDEXES = 57475
const STATUS = 57476
const VARIABLES = 57477
const BEGIN = 57478
const START = 57479
const TRANSACTION = 57480
const COMMIT = 57481
const ROLLBACK = 57482
const BIT = 57483
const TINYINT = 57484
const SMALLINT = 57485
const MEDIUMINT = 57486
const INT = 57487
const INTEGER = 57488
const BIGINT = 57489
const INTNUM = 57490
const REAL = 57491
const DOUBLE = 57492
const FLOAT_TYPE = 57493
const DECIMAL = 57494
const NUMERIC = 57495
const TIME = 57496
const TIMESTAMP = 57497
const DATETIME = 57498
const YEAR = 57499
const CHAR = 57500
const VARCHAR = 57501
const BOOL = 57502
const CHARACTER = 57503
const VARBINARY = 57504
const NCHAR = 57505
const TEXT = 57506
const TINYTEXT = 57507
const MEDIUMTEXT = 57508
const LONGTEXT = 57509
const BLOB = 57510
const TINYBLOB = 57511
const MEDIUMBLOB = 57512
const LONGBLOB = 57513
const JSON = 57514
const ENUM = 57515
const GEOMETRY = 57516
const POINT = 57517
const LINESTRING = 57518
const POLYGON = 57519
const GEOMETRYCOLLECTION = 57520
const MULTIPOINT = 57521
const MULTILINESTRING = 57522
const MULTIPOLYGON = 57523
const NULLX = 57524
const AUTO_INCREMENT = 57525
const APPROXNUM = 57526
const SIGNED = 57527
const UNSIGNED = 57528
const ZEROFILL = 57529
const DATABASES = 57530
const TABLES = 57531
const VITESS_KEYSPACES = 57532
const VITESS_SHARDS = 57533
const VITESS_TABLETS = 57534
const VSCHEMA_TABLES = 57535
const EXTENDED = 57536
const FULL = 57537
const PROCESSLIST = 57538
const NAMES = 57539
const CHARSET = 57540
const GLOBAL = 57541
const SESSION = 57542
const ISOLATION = 57543
const LEVEL = 57544
const READ = 57545
const WRITE = 57546
const ONLY = 57547
const REPEATABLE = 57548
const COMMITTED = 57549
const UNCOMMITTED = 57550
const SERIALIZABLE = 57551
const CURRENT_TIMESTAMP = 57552
const DATABASE = 57553
const CURRENT_DATE = 57554
const CURRENT_TIME = 57555
const LOCALTIME = 57556
const LOCALTIMESTAMP = 57557
const UTC_DATE = 57558
const UTC_TIME = 57559
const UTC_TIMESTAMP = 57560
const REPLACE = 57561
const CONVERT = 57562
const CAST = 57563
const SUBSTR = 57564
const SUBSTRING = 57565
const GROUP_CONCAT = 57566
const SEPARATOR = 57567
const OVER = 57568
const WINDOW = 57569
const GROUPING = 57570
const GROUPS = 57571
const AVG = 57572
const BIT_AND = 57573
const BIT_OR = 57574
const BIT_XOR = 57575
const COUNT = 57576
const JSON_ARRAYAGG = 57577
const JSON_OBJECTAGG = 57578
const MAX = 57579
const MIN = 57580
const STDDEV_POP = 57581
const STDDEV = 57582
const STD = 57583
const STDDEV_SAMP = 57584
const SUM = 57585
const VAR_POP = 57586
const VARIANCE = 57587
const VAR_SAMP = 57588
const CUME_DIST = 57589
const DENSE_RANK = 57590
const FIRST_VALUE = 57591
const LAG = 57592
const LAST_VALUE = 57593
const LEAD = 57594
const NTH_VALUE = 57595
const NTILE = 57596
const ROW_NUMBER = 57597
const PERCENT_RANK = 57598
const RANK = 57599
const MATCH = 57600
const AGAINST = 57601
const BOOLEAN = 57602
const LANGUAGE = 57603
const WITH = 57604
const QUERY = 57605
const EXPANSION = 57606
const UNUSED = 57607

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"OF",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"DATABASES",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA_TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 35,
	-2, 4,
	-1, 36,
	151, 271,
	152, 271,
	-2, 261,
	-1, 275,
	110, 641,
	-2, 637,
	-1, 276,
	110, 642,
	-2, 638,
	-1, 375,
	81, 815,
	-2, 66,
	-1, 376,
	81, 776,
	-2, 67,
	-1, 381,
	81, 760,
	-2, 603,
	-1, 383,
	81, 797,
	-2, 605,
	-1, 720,
	53, 49,
	55, 49,
	-2, 51,
	-1, 859,
	110, 644,
	-2, 640,
	-1, 1096,
	5, 36,
	-2, 412,
	-1, 1150,
	5, 35,
	-2, 578,
	-1, 1416,
	5, 36,
	-2, 579,
	-1, 1465,
	5, 35,
	-2, 581,
	-1, 1534,
	5, 36,
	-2, 582,
}

const yyPrivate = 57344

const yyLast = 12879

var yyAct = [...]int{
	308, 48, 1523, 1034, 1496, 791, 949, 1447, 55, 1313,
	280, 1474, 1340, 224, 638, 3, 639, 1379, 1314, 1310,
	968, 1420, 307, 989, 714, 1212, 1028, 716, 213, 1170,
	222, 1262, 1153, 884, 891, 986, 254, 1088, 1215, 990,
	894, 1203, 730, 950, 845, 910, 861, 826, 1000, 48,
	541, 1008, 547, 1158, 1024, 946, 1157, 492, 259, 729,
	374, 703, 278, 219, 366, 1014, 1070, 263, 361, 590,
	380, 834, 214, 215, 216, 217, 371, 369, 221, 54,
	536, 654, 1557, 1545, 1555, 1531, 1553, 582, 360, 1505,
	605, 604, 614, 615, 607, 608, 609, 610, 611, 612,
	613, 606, 267, 23, 616, 23, 23, 282, 260, 1035,
	1544, 1280, 1119, 1403, 496, 1178, 1295, 1483, 1177, 517,
	731, 1179, 732, 362, 1335, 1336, 1334, 1148, 1294, 982,
	983, 1149, 1530, 1464, 981, 532, 1346, 1347, 1348, 183,
	179, 180, 181, 269, 1351, 1349, 1432, 1194, 820, 59,
	1007, 52, 1452, 52, 52, 821, 52, 1015, 1263, 1392,
	1390, 212, 528, 529, 1554, 56, 1552, 1524, 1236, 947,
	1475, 365, 969, 971, 61, 62, 63, 64, 65, 505,
	506, 1233, 519, 1477, 521, 499, 1002, 1235, 1265, 176,
	177, 177, 799, 1481, 1002, 790, 523, 523, 523, 523,
	1169, 523, 1168, 1002, 1377, 1167, 494, 502, 523, 518,
	520, 191, 178, 1248, 1104, 493, 628, 629, 1082, 1066,
	1267, 832, 1271, 540, 1266, 596, 1264, 606, 512, 987,
	616, 1269, 1188, 609, 610, 611, 612, 613, 606, 1355,
	1268, 616, 616, 868, 588, 587, 970, 829, 182, 587,
	1476, 1284, 1101, 1270, 1272, 588, 587, 866, 867, 865,
	48, 589, 589, 794, 1515, 589, 578, 1365, 1156, 733,
	549, 1223, 589, 1015, 579, 625, 1282, 1506, 627, 1001,
	1234, 911, 1232, 594, 999, 997, 1061, 1001, 998, 1356,
	516, 1482, 1480, 1406, 1004, 911, 1001, 1111, 1518, 1005,
	1221, 588, 587, 1240, 1350, 1192, 584, 637, 1535, 641,
	643, 644, 645, 646, 647, 648, 649, 650, 589, 653,
	655, 655, 655, 655, 655, 655, 655, 655, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	1529, 508, 509, 510, 1222, 1223, 1062, 715, 535, 1227,
	1224, 1217, 1218, 1225, 1220, 1219, 51, 175, 51, 51,
	1239, 51, 851, 853, 854, 626, 1226, 852, 1079, 1080,
	1081, 1438, 1229, 1437, 1221, 835, 836, 1536, 718, 544,
	548, 498, 656, 657, 658, 659, 660, 661, 662, 52,
	580, 885, 1207, 886, 21, 1516, 597, 1206, 1100, 864,
	1099, 1195, 1459, 1435, 605, 604, 614, 615, 607, 608,
	609, 610, 611, 612, 613, 606, 588, 587, 616, 1373,
	359, 1204, 588, 587, 1539, 537, 721, 1467, 1521, 727,
	1513, 1343, 640, 589, 1467, 537, 1467, 1468, 1222, 589,
	1342, 652, 1189, 1227, 1224, 1217, 1218, 1225, 1220, 1219,
	1089, 831, 258, 1180, 365, 500, 501, 1429, 1428, 537,
	1226, 524, 1331, 537, 1065, 537, 1216, 607, 608, 609,
	610, 611, 612, 613, 606, 1037, 523, 616, 887, 705,
	708, 709, 710, 706, 523, 707, 711, 805, 830, 1159,
	1160, 1362, 1361, 1358, 1359, 523, 523, 523, 523, 523,
	523, 523, 523, 804, 588, 587, 1358, 1357, 1487, 523,
	523, 1094, 537, 297, 296, 299, 300, 301, 302, 795,
	627, 589, 298, 303, 699, 537, 1486, 377, 793, 1399,
	537, 679, 680, 681, 682, 683, 667, 668, 669, 684,
	685, 670, 671, 672, 678, 686, 673, 674, 675, 676,
	677, 689, 688, 687, 690, 691, 693, 692, 694, 806,
	788, 273, 724, 808, 514, 276, 605, 604, 614, 615,
	607, 608, 609, 610, 611, 612, 613, 606, 896, 537,
	616, 1252, 1155, 823, 507, 594, 740, 739, 1311, 493,
	1155, 1154, 56, 1352, 56, 838, 78, 824, 1444, 698,
	188, 837, 862, 188, 725, 975, 723, 723, 48, 1154,
	1414, 1396, 537, 1526, 1364, 1360, 1106, 188, 1155, 1103,
	1181, 980, 641, 1094, 699, 1094, 726, 825, 840, 188,
	188, 78, 896, 699, 1094, 188, 898, 78, 903, 906,
	839, 855, 1094, 857, 912, 833, 539, 859, 605, 604,
	614, 615, 607, 608, 609, 610, 611, 612, 613, 606,
	1105, 1154, 616, 1102, 538, 52, 1442, 1009, 1029, 1325,
	1184, 888, 889, 1159, 1160, 1166, 1025, 1020, 52, 915,
	366, 366, 366, 366, 366, 366, 1019, 863, 67, 951,
	920, 792, 922, 1032, 1345, 1311, 715, 1208, 972, 895,
	897, 1163, 802, 366, 533, 846, 1165, 959, 962, 960,
	898, 848, 849, 963, 961, 958, 913, 964, 908, 709,
	710, 264, 265, 966, 1551, 1543, 1247, 976, 918, 919,
	973, 1067, 1549, 1077, 583, 925, 926, 927, 928, 1076,
	1199, 738, 188, 542, 188, 515, 929, 930, 952, 581,
	188, 934, 956, 965, 937, 543, 974, 188, 1191, 942,
	1520, 78, 78, 78, 78, 640, 78, 978, 979, 901,
	902, 1519, 1462, 78, 523, 967, 523, 1185, 994, 1412,
	1010, 1011, 1012, 1013, 523, 1443, 1039, 365, 365, 365,
	365, 365, 365, 801, 1030, 1244, 1021, 1022, 1023, 1016,
	1017, 1018, 713, 365, 953, 954, 955, 583, 957, 255,
	365, 705, 708, 709, 710, 706, 1461, 707, 711, 1026,
	1027, 835, 836, 261, 262, 1075, 1449, 549, 256, 1380,
	56, 1448, 1155, 1074, 377, 593, 585, 1508, 1433, 1083,
	828, 218, 58, 60, 722, 630, 631, 632, 633, 634,
	635, 636, 53, 1, 1036, 1211, 1045, 985, 1522, 1473,
	1339, 996, 988, 491, 66, 1514, 1071, 995, 862, 1072,
	605, 604, 614, 615, 607, 608, 609, 610, 611, 612,
	613, 606, 1479, 859, 616, 1431, 600, 1064, 603, 1003,
	1193, 1063, 1084, 1006, 617, 618, 619, 620, 621, 622,
	623, 1344, 601, 602, 599, 605, 604, 614, 615, 607,
	608, 609, 610, 611, 612, 613, 606, 1517, 1190, 616,
	745, 743, 744, 742, 747, 188, 746, 1151, 1152, 741,
	199, 372, 188, 188, 188, 1110, 712, 734, 78, 1031,
	586, 1150, 68, 1231, 78, 1230, 1041, 1238, 1091, 819,
	1060, 531, 1092, 863, 1068, 1069, 366, 548, 201, 1096,
	1097, 1098, 624, 1073, 1176, 378, 546, 1492, 1107, 1109,
	651, 909, 281, 1113, 1495, 1114, 1115, 1116, 1117, 850,
	1173, 1121, 1122, 1123, 1124, 1125, 295, 1172, 294, 1174,
	1164, 1161, 1132, 1133, 1134, 293, 1136, 1137, 290, 1139,
	1140, 1141, 1142, 1175, 1144, 1145, 1146, 292, 291, 1182,
	841, 1147, 598, 279, 523, 1118, 1120, 271, 364, 695,
	1095, 701, 1126, 1127, 1128, 1129, 704, 1186, 1187, 702,
	1198, 700, 1200, 1201, 1202, 1112, 1162, 363, 220, 523,
	47, 1250, 1205, 1402, 1400, 1504, 25, 57, 266, 19,
	1214, 18, 17, 20, 16, 15, 1196, 1197, 858, 14,
	29, 78, 1228, 365, 13, 12, 11, 188, 188, 78,
	10, 188, 9, 8, 188, 7, 6, 5, 188, 4,
	78, 78, 78, 78, 78, 78, 78, 78, 1243, 257,
	22, 1251, 2, 0, 78, 78, 0, 1281, 1255, 188,
	1286, 0, 0, 1256, 188, 0, 78, 0, 0, 0,
	0, 0, 0, 1274, 1273, 1261, 0, 605, 604, 614,
	615, 607, 608, 609, 610, 611, 612, 613, 606, 0,
	1316, 616, 48, 0, 0, 1312, 0, 0, 0, 951,
	0, 0, 1320, 0, 0, 951, 1317, 78, 1327, 1328,
	1329, 188, 1315, 0, 1260, 859, 0, 593, 0, 0,
	860, 1332, 1319, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 1321, 1318,
	0, 0, 0, 0, 0, 1337, 1333, 0, 377, 0,
	0, 1292, 1293, 0, 0, 0, 1298, 0, 0, 1301,
	0, 991, 78, 1338, 1306, 0, 0, 0, 188, 0,
	0, 0, 1353, 1354, 0, 0, 0, 0, 1287, 1288,
	1289, 1290, 1291, 0, 1366, 627, 0, 0, 0, 0,
	0, 1330, 0, 366, 0, 1283, 0, 1368, 0, 0,
	1371, 0, 1296, 1297, 0, 1299, 1300, 0, 1302, 1303,
	1304, 1305, 0, 1307, 1308, 1309, 0, 1381, 0, 0,
	0, 1401, 188, 1378, 0, 188, 188, 188, 188, 188,
	188, 0, 0, 0, 1388, 1405, 0, 0, 188, 1322,
	1323, 188, 0, 1324, 0, 188, 0, 1326, 188, 188,
	0, 0, 78, 0, 858, 1385, 1386, 0, 1387, 0,
	0, 1389, 0, 1391, 0, 78, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 1422,
	1423, 1424, 1376, 0, 1393, 1394, 1395, 1419, 1425, 1398,
	365, 718, 0, 0, 523, 0, 0, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 188, 1182, 0, 78,
	0, 78, 0, 0, 1374, 188, 0, 0, 188, 78,
	1440, 545, 0, 1430, 0, 0, 1446, 1415, 1416, 1417,
	1418, 0, 0, 0, 0, 1441, 0, 0, 0, 0,
	0, 0, 0, 0, 1450, 1316, 0, 0, 1466, 0,
	0, 1407, 1408, 1434, 0, 1436, 186, 1409, 1404, 211,
	1410, 0, 1465, 1463, 0, 1411, 0, 1315, 0, 0,
	0, 0, 1478, 223, 1489, 366, 1472, 0, 1085, 1086,
	1087, 0, 1451, 270, 1491, 186, 186, 0, 0, 0,
	640, 186, 1494, 1498, 1488, 1316, 0, 48, 1499, 1490,
	1484, 991, 1485, 0, 1509, 0, 0, 0, 1507, 0,
	0, 1510, 0, 1458, 0, 1512, 1460, 1315, 604, 614,
	615, 607, 608, 609, 610, 611, 612, 613, 606, 0,
	0, 616, 0, 1469, 1470, 1471, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 1533, 1532, 1213, 0, 951,
	0, 0, 0, 1525, 0, 0, 0, 1537, 0, 0,
	0, 1542, 0, 0, 1500, 1501, 1502, 1503, 0, 0,
	1498, 1547, 1548, 1541, 0, 0, 0, 0, 0, 1550,
	0, 0, 365, 0, 0, 1556, 0, 0, 78, 0,
	0, 188, 0, 0, 1254, 0, 0, 0, 186, 0,
	186, 0, 0, 0, 0, 78, 186, 0, 0, 0,
	0, 0, 0, 186, 0, 1528, 1277, 0, 0, 0,
	1051, 1534, 1493, 1497, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 1538, 1050, 640, 0, 0, 0, 0,
	0, 197, 0, 1546, 0, 0, 0, 0, 78, 78,
	0, 78, 0, 893, 0, 0, 0, 0, 0, 306,
	0, 0, 1055, 0, 0, 0, 207, 0, 0, 1560,
	1561, 1049, 0, 0, 78, 0, 0, 188, 188, 0,
	0, 78, 78, 0, 0, 0, 0, 0, 0, 188,
	76, 0, 0, 991, 0, 991, 0, 0, 78, 0,
	1497, 1258, 1259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 1276, 192, 1278, 1279, 1046,
	1043, 1044, 194, 1042, 0, 379, 0, 0, 0, 200,
	196, 497, 0, 0, 0, 78, 367, 0, 614, 615,
	607, 608, 609, 610, 611, 612, 613, 606, 1053, 1056,
	616, 0, 0, 0, 0, 0, 198, 0, 0, 202,
	1254, 0, 0, 0, 0, 0, 0, 78, 78, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 1048, 0, 0, 0, 193, 186, 223,
	186, 0, 0, 0, 0, 0, 0, 78, 0, 78,
	78, 370, 0, 0, 0, 1047, 495, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 203, 204, 205, 206,
	210, 0, 0, 0, 188, 209, 208, 0, 0, 525,
	526, 527, 78, 530, 0, 0, 0, 0, 0, 0,
	534, 0, 1052, 0, 0, 78, 188, 0, 0, 991,
	0, 0, 78, 537, 0, 379, 379, 379, 379, 0,
	379, 0, 0, 0, 78, 0, 0, 379, 188, 1383,
	0, 0, 0, 0, 0, 0, 1213, 991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1054, 1397, 605,
	604, 614, 615, 607, 608, 609, 610, 611, 612, 613,
	606, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 504, 0, 0, 0, 0,
	0, 511, 0, 186, 186, 0, 0, 186, 513, 0,
	186, 0, 0, 0, 807, 0, 0, 0, 0, 0,
	0, 78, 0, 78, 78, 78, 188, 78, 0, 0,
	0, 0, 0, 78, 0, 186, 0, 0, 0, 0,
	223, 605, 604, 614, 615, 607, 608, 609, 610, 611,
	612, 613, 606, 0, 0, 616, 0, 0, 0, 78,
	78, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 0, 1257,
	0, 0, 0, 0, 0, 0, 0, 186, 1453, 1454,
	0, 1455, 1456, 1457, 0, 0, 0, 0, 807, 605,
	604, 614, 615, 607, 608, 609, 610, 611, 612, 613,
	606, 0, 379, 616, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 270,
	188, 0, 0, 0, 223, 270, 270, 0, 0, 905,
	905, 270, 0, 0, 0, 905, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 270, 270, 270, 270, 0,
	0, 270, 270, 270, 270, 270, 697, 0, 0, 0,
	0, 0, 270, 270, 270, 720, 270, 270, 0, 270,
	270, 270, 270, 0, 270, 270, 270, 0, 186, 0,
	905, 186, 186, 186, 186, 186, 186, 0, 789, 0,
	0, 0, 0, 0, 223, 0, 798, 186, 0, 0,
	78, 223, 0, 0, 186, 186, 0, 809, 810, 811,
	812, 813, 814, 815, 816, 379, 0, 0, 0, 0,
	0, 817, 818, 379, 0, 0, 0, 0, 1558, 0,
	0, 0, 0, 0, 379, 379, 379, 379, 379, 379,
	379, 379, 0, 0, 0, 0, 0, 0, 379, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 186, 0, 605, 604, 614, 615,
	607, 608, 609, 610, 611, 612, 613, 606, 796, 797,
	616, 842, 800, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 0, 379, 0, 0, 0,
	0, 23, 24, 49, 26, 27, 0, 270, 0, 0,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 0, 0, 28, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 890, 899, 900, 0,
	0, 0, 0, 907, 0, 37, 0, 904, 904, 52,
	0, 0, 0, 904, 270, 0, 0, 914, 0, 916,
	917, 0, 847, 0, 921, 0, 923, 924, 0, 0,
	270, 0, 0, 0, 931, 932, 933, 0, 935, 936,
	0, 938, 939, 940, 941, 0, 943, 944, 945, 0,
	0, 270, 270, 0, 0, 0, 270, 0, 904, 270,
	0, 0, 0, 0, 270, 0, 0, 0, 30, 31,
	33, 32, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 36,
	43, 44, 0, 0, 45, 46, 34, 186, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 38, 39,
	0, 40, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1038, 0, 1040, 0,
	0, 0, 0, 948, 0, 0, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 379, 0, 0, 0, 0,
	977, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 1242, 0, 0, 0, 0, 0,
	0, 50, 379, 0, 0, 186, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 1033, 0, 0,
	0, 0, 0, 0, 51, 0, 1057, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 905, 0, 0, 0,
	0, 0, 0, 1130, 1131, 0, 0, 0, 1135, 0,
	0, 1138, 0, 0, 0, 0, 1143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 762,
	186, 0, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1210, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1237, 1209, 379, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 1245, 1246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 776, 777, 778,
	779, 780, 781, 782, 379, 783, 784, 785, 786, 787,
	764, 765, 766, 767, 748, 749, 0, 0, 751, 1285,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	768, 769, 770, 771, 772, 773, 774, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	1249, 827, 1171, 0, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 379, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	0, 0, 0, 0, 0, 0, 1372, 1375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1421, 0, 1421, 1421, 1421,
	0, 1426, 0, 0, 0, 0, 1439, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 379, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1511, 0, 0,
	0, 0, 0, 476, 460, 0, 430, 478, 408, 422,
	489, 423, 424, 453, 395, 438, 127, 420, 0, 411,
	386, 417, 387, 409, 432, 95, 435, 407, 462, 441,
	109, 0, 484, 111, 448, 0, 144, 120, 904, 0,
	434, 467, 436, 458, 429, 454, 401, 447, 479, 421,
	451, 480, 0, 0, 1540, 77, 0, 992, 993, 0,
	0, 0, 0, 0, 88, 0, 450, 475, 419, 452,
	385, 449, 0, 390, 396, 488, 473, 414, 415, 1183,
	0, 0, 0, 0, 0, 0, 433, 437, 455, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	446, 0, 0, 0, 397, 391, 0, 431, 0, 0,
	0, 400, 0, 413, 456, 0, 384, 459, 471, 428,
	189, 474, 426, 425, 477, 133, 0, 0, 147, 100,
	99, 108, 463, 410, 418, 91, 416, 139, 129, 159,
	444, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 388, 0,
	145, 161, 174, 406, 472, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 404, 405, 402, 403, 439,
	440, 481, 482, 483, 457, 398, 0, 468, 469, 0,
	461, 0, 0, 0, 0, 389, 392, 393, 394, 399,
	0, 0, 443, 445, 466, 465, 464, 0, 470, 486,
	485, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 79, 0, 110, 490, 135, 97,
	162, 476, 460, 0, 430, 478, 408, 422, 489, 423,
	424, 453, 395, 438, 127, 420, 0, 411, 386, 417,
	387, 409, 432, 95, 435, 407, 462, 441, 109, 0,
	484, 111, 448, 0, 144, 120, 0, 0, 434, 467,
	436, 458, 429, 454, 401, 447, 479, 421, 451, 480,
	0, 0, 0, 77, 0, 992, 993, 0, 0, 0,
	0, 0, 88, 0, 450, 475, 419, 452, 385, 449,
	0, 390, 396, 488, 473, 414, 415, 0, 0, 0,
	0, 0, 0, 0, 433, 437, 455, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 446, 0,
	0, 0, 397, 391, 0, 431, 0, 0, 0, 400,
	0, 413, 456, 0, 384, 459, 471, 428, 189, 474,
	426, 425, 477, 133, 0, 0, 147, 100, 99, 108,
	463, 410, 418, 91, 416, 139, 129, 159, 444, 130,
	138, 112, 151, 134, 158, 190, 166, 149, 165, 80,
	148, 157, 89, 141, 82, 155, 146, 118, 104, 105,
	81, 0, 137, 94, 98, 93, 126, 152, 153, 92,
	173, 85, 164, 84, 86, 163, 125, 150, 156, 119,
	116, 83, 154, 117, 115, 107, 96, 101, 131, 114,
	132, 102, 122, 121, 123, 0, 388, 0, 145, 161,
	174, 406, 472, 167, 168, 169, 170, 0, 0, 0,
	124, 87, 103, 142, 106, 113, 136, 172, 128, 140,
	90, 160, 143, 404, 405, 402, 403, 439, 440, 481,
	482, 483, 457, 398, 0, 468, 469, 0, 461, 0,
	0, 0, 0, 389, 392, 393, 394, 399, 0, 0,
	443, 445, 466, 465, 464, 0, 470, 486, 485, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 79, 0, 110, 490, 135, 97, 162, 476,
	460, 0, 430, 478, 408, 422, 489, 423, 424, 453,
	395, 438, 127, 420, 0, 411, 386, 417, 387, 409,
	432, 95, 435, 407, 462, 441, 109, 0, 484, 111,
	448, 0, 144, 120, 0, 0, 434, 467, 436, 458,
	429, 454, 401, 447, 479, 421, 451, 480, 52, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 450, 475, 419, 452, 385, 449, 0, 390,
	396, 488, 473, 414, 415, 0, 0, 0, 0, 0,
	0, 0, 433, 437, 455, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 446, 0, 0, 0,
	397, 391, 0, 431, 0, 0, 0, 400, 0, 413,
	456, 0, 384, 459, 471, 428, 189, 474, 426, 425,
	477, 133, 0, 0, 147, 100, 99, 108, 463, 410,
	418, 91, 416, 139, 129, 159, 444, 130, 138, 112,
	151, 134, 158, 190, 166, 149, 165, 80, 148, 157,
	89, 141, 82, 155, 146, 118, 104, 105, 81, 0,
	137, 94, 98, 93, 126, 152, 153, 92, 173, 85,
	164, 84, 86, 163, 125, 150, 156, 119, 116, 83,
	154, 117, 115, 107, 96, 101, 131, 114, 132, 102,
	122, 121, 123, 0, 388, 0, 145, 161, 174, 406,
	472, 167, 168, 169, 170, 0, 0, 0, 124, 87,
	103, 142, 106, 113, 136, 172, 128, 140, 90, 160,
	143, 404, 405, 402, 403, 439, 440, 481, 482, 483,
	457, 398, 0, 468, 469, 0, 461, 0, 0, 0,
	0, 389, 392, 393, 394, 399, 0, 0, 443, 445,
	466, 465, 464, 0, 470, 486, 485, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	79, 0, 110, 490, 135, 97, 162, 476, 460, 0,
	430, 478, 408, 422, 489, 423, 424, 453, 395, 438,
	127, 420, 0, 411, 386, 417, 387, 409, 432, 95,
	435, 407, 462, 441, 109, 0, 484, 111, 448, 0,
	144, 120, 0, 0, 434, 467, 436, 458, 429, 454,
	401, 447, 479, 421, 451, 480, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	450, 475, 419, 452, 385, 449, 0, 390, 396, 488,
	473, 414, 415, 0, 0, 0, 0, 0, 0, 0,
	433, 437, 455, 427, 0, 0, 0, 0, 0, 0,
	1253, 0, 412, 0, 446, 0, 0, 0, 397, 391,
	0, 431, 0, 0, 0, 400, 0, 413, 456, 0,
	384, 459, 471, 428, 189, 474, 426, 425, 477, 133,
	0, 0, 147, 100, 99, 108, 463, 410, 418, 91,
	416, 139, 129, 159, 444, 130, 138, 112, 151, 134,
	158, 190, 166, 149, 165, 80, 148, 157, 89, 141,
	82, 155, 146, 118, 104, 105, 81, 0, 137, 94,
	98, 93, 126, 152, 153, 92, 173, 85, 164, 84,
	86, 163, 125, 150, 156, 119, 116, 83, 154, 117,
	115, 107, 96, 101, 131, 114, 132, 102, 122, 121,
	123, 0, 388, 0, 145, 161, 174, 406, 472, 167,
	168, 169, 170, 0, 0, 0, 124, 87, 103, 142,
	106, 113, 136, 172, 128, 140, 90, 160, 143, 404,
	405, 402, 403, 439, 440, 481, 482, 483, 457, 398,
	0, 468, 469, 0, 461, 0, 0, 0, 0, 389,
	392, 393, 394, 399, 0, 0, 443, 445, 466, 465,
	464, 0, 470, 486, 485, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 79, 0,
	110, 490, 135, 97, 162, 476, 460, 0, 430, 478,
	408, 422, 489, 423, 424, 453, 395, 438, 127, 420,
	0, 411, 386, 417, 387, 409, 432, 95, 435, 407,
	462, 441, 109, 0, 484, 111, 448, 0, 144, 120,
	0, 0, 434, 467, 436, 458, 429, 454, 401, 447,
	479, 421, 451, 480, 0, 0, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 450, 475,
	419, 452, 385, 449, 0, 390, 396, 488, 473, 414,
	415, 0, 0, 0, 0, 0, 0, 0, 433, 437,
	455, 427, 0, 0, 0, 0, 0, 0, 856, 0,
	412, 0, 446, 0, 0, 0, 397, 391, 0, 431,
	0, 0, 0, 400, 0, 413, 456, 0, 384, 459,
	471, 428, 189, 474, 426, 425, 477, 133, 0, 0,
	147, 100, 99, 108, 463, 410, 418, 91, 416, 139,
	129, 159, 444, 130, 138, 112, 151, 134, 158, 190,
	166, 149, 165, 80, 148, 157, 89, 141, 82, 155,
	146, 118, 104, 105, 81, 0, 137, 94, 98, 93,
	126, 152, 153, 92, 173, 85, 164, 84, 86, 163,
	125, 150, 156, 119, 116, 83, 154, 117, 115, 107,
	96, 101, 131, 114, 132, 102, 122, 121, 123, 0,
	388, 0, 145, 161, 174, 406, 472, 167, 168, 169,
	170, 0, 0, 0, 124, 87, 103, 142, 106, 113,
	136, 172, 128, 140, 90, 160, 143, 404, 405, 402,
	403, 439, 440, 481, 482, 483, 457, 398, 0, 468,
	469, 0, 461, 0, 0, 0, 0, 389, 392, 393,
	394, 399, 0, 0, 443, 445, 466, 465, 464, 0,
	470, 486, 485, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 79, 0, 110, 490,
	135, 97, 162, 476, 460, 0, 430, 478, 408, 422,
	489, 423, 424, 453, 395, 438, 127, 420, 0, 411,
	386, 417, 387, 409, 432, 95, 435, 407, 462, 441,
	109, 0, 484, 111, 448, 0, 144, 120, 0, 0,
	434, 467, 436, 458, 429, 454, 401, 447, 479, 421,
	451, 480, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 450, 475, 419, 452,
	385, 449, 0, 390, 396, 488, 473, 414, 415, 0,
	0, 0, 0, 0, 0, 0, 433, 437, 455, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	446, 0, 0, 0, 397, 391, 0, 431, 0, 0,
	0, 400, 0, 413, 456, 0, 384, 459, 471, 428,
	189, 474, 426, 425, 477, 133, 0, 0, 147, 100,
	99, 108, 463, 410, 418, 91, 416, 139, 129, 159,
	444, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 388, 0,
	145, 161, 174, 406, 472, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 404, 405, 402, 403, 439,
	440, 481, 482, 483, 457, 398, 0, 468, 469, 0,
	461, 0, 0, 0, 0, 389, 392, 393, 394, 399,
	0, 0, 443, 445, 466, 465, 464, 0, 470, 486,
	485, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 79, 0, 110, 490, 135, 97,
	162, 476, 460, 0, 430, 478, 408, 422, 489, 423,
	424, 453, 395, 438, 127, 420, 0, 411, 386, 417,
	387, 409, 432, 95, 435, 407, 462, 441, 109, 0,
	484, 111, 448, 0, 144, 120, 0, 0, 434, 467,
	436, 458, 429, 454, 401, 447, 479, 421, 451, 480,
	0, 0, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 0, 450, 475, 419, 452, 385, 449,
	0, 390, 396, 488, 473, 414, 415, 0, 0, 0,
	0, 0, 0, 0, 433, 437, 455, 427, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 0, 446, 0,
	0, 0, 397, 391, 0, 431, 0, 0, 0, 400,
	0, 413, 456, 0, 384, 459, 471, 428, 189, 474,
	426, 425, 477, 133, 0, 0, 147, 100, 99, 108,
	463, 410, 418, 91, 416, 139, 129, 159, 444, 130,
	138, 112, 151, 134, 158, 190, 166, 149, 165, 80,
	148, 157, 89, 141, 82, 155, 146, 118, 104, 105,
	81, 0, 137, 94, 98, 93, 126, 152, 153, 92,
	173, 85, 164, 84, 86, 163, 125, 150, 156, 119,
	116, 83, 154, 117, 115, 107, 96, 101, 131, 114,
	132, 102, 122, 121, 123, 0, 388, 0, 145, 161,
	174, 406, 472, 167, 168, 169, 170, 0, 0, 0,
	124, 87, 103, 142, 106, 113, 136, 172, 128, 140,
	90, 160, 143, 404, 405, 402, 403, 439, 440, 481,
	482, 483, 457, 398, 0, 468, 469, 0, 461, 0,
	0, 0, 0, 389, 392, 393, 394, 399, 0, 0,
	443, 445, 466, 465, 464, 0, 470, 486, 485, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 79, 0, 110, 490, 135, 97, 162, 476,
	460, 0, 430, 478, 408, 422, 489, 423, 424, 453,
	395, 438, 127, 420, 0, 411, 386, 417, 387, 409,
	432, 95, 435, 407, 462, 441, 109, 0, 484, 111,
	448, 0, 144, 120, 0, 0, 434, 467, 436, 458,
	429, 454, 401, 447, 479, 421, 451, 480, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 450, 475, 419, 452, 385, 449, 0, 390,
	396, 488, 473, 414, 415, 0, 0, 0, 0, 0,
	0, 0, 433, 437, 455, 427, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 0, 446, 0, 0, 0,
	397, 391, 0, 431, 0, 0, 0, 400, 0, 413,
	456, 0, 384, 459, 471, 428, 189, 474, 426, 425,
	477, 133, 0, 0, 147, 100, 99, 108, 463, 410,
	418, 91, 416, 139, 129, 159, 444, 130, 138, 112,
	151, 134, 158, 190, 166, 149, 165, 80, 148, 157,
	89, 141, 82, 155, 146, 118, 104, 105, 81, 0,
	137, 94, 98, 93, 126, 152, 153, 92, 173, 85,
	164, 84, 382, 163, 125, 150, 156, 119, 116, 83,
	154, 117, 115, 107, 96, 101, 131, 114, 132, 102,
	122, 121, 123, 0, 388, 0, 145, 161, 174, 406,
	472, 167, 168, 169, 170, 0, 0, 0, 383, 381,
	103, 142, 106, 113, 136, 172, 128, 140, 90, 160,
	143, 404, 405, 402, 403, 439, 440, 481, 482, 483,
	457, 398, 0, 468, 469, 0, 461, 0, 0, 0,
	0, 389, 392, 393, 394, 399, 0, 0, 443, 445,
	466, 465, 464, 0, 470, 486, 485, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	79, 0, 110, 490, 135, 97, 162, 476, 460, 0,
	430, 478, 408, 422, 489, 423, 424, 453, 395, 438,
	127, 420, 0, 411, 386, 417, 387, 409, 432, 95,
	435, 407, 462, 441, 109, 0, 484, 111, 448, 0,
	144, 120, 0, 0, 434, 467, 436, 458, 429, 454,
	401, 447, 479, 421, 451, 480, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 88, 0,
	450, 475, 419, 452, 385, 449, 0, 390, 396, 488,
	473, 414, 415, 0, 0, 0, 0, 0, 0, 0,
	433, 437, 455, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 0, 446, 0, 0, 0, 397, 391,
	0, 431, 0, 0, 0, 400, 0, 413, 456, 0,
	384, 459, 471, 428, 189, 474, 426, 425, 477, 133,
	0, 0, 147, 100, 99, 108, 463, 410, 418, 91,
	416, 139, 129, 159, 444, 130, 138, 112, 151, 134,
	158, 190, 166, 149, 165, 80, 148, 157, 89, 141,
	82, 155, 146, 118, 104, 105, 81, 0, 137, 94,
	98, 93, 126, 152, 153, 92, 173, 85, 164, 84,
	86, 163, 125, 150, 156, 119, 116, 83, 154, 117,
	115, 107, 96, 101, 131, 114, 132, 102, 122, 121,
	123, 0, 388, 0, 145, 161, 174, 406, 472, 167,
	168, 169, 170, 0, 0, 0, 124, 87, 103, 142,
	106, 113, 136, 172, 128, 140, 90, 160, 143, 404,
	405, 402, 403, 439, 440, 481, 482, 483, 457, 398,
	0, 468, 469, 0, 461, 0, 0, 0, 0, 389,
	392, 393, 394, 399, 0, 0, 443, 445, 466, 465,
	464, 0, 470, 486, 485, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 79, 0,
	110, 490, 135, 97, 162, 476, 460, 0, 430, 478,
	408, 422, 489, 423, 424, 453, 395, 438, 127, 420,
	0, 411, 386, 417, 387, 409, 432, 95, 435, 407,
	462, 441, 109, 0, 484, 111, 448, 0, 144, 120,
	0, 0, 434, 467, 436, 458, 429, 454, 401, 447,
	479, 421, 451, 480, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 450, 475,
	419, 452, 385, 449, 0, 390, 396, 488, 473, 414,
	415, 0, 0, 0, 0, 0, 0, 0, 433, 437,
	455, 427, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 446, 0, 0, 0, 397, 391, 0, 431,
	0, 0, 0, 400, 0, 413, 456, 0, 384, 459,
	471, 428, 189, 474, 426, 425, 477, 133, 0, 0,
	147, 100, 99, 108, 463, 410, 418, 91, 416, 139,
	129, 159, 444, 130, 138, 112, 151, 134, 158, 190,
	166, 149, 165, 80, 148, 728, 89, 141, 82, 155,
	146, 118, 104, 105, 81, 0, 137, 94, 98, 93,
	126, 152, 153, 92, 173, 85, 164, 84, 382, 163,
	125, 150, 156, 119, 116, 83, 154, 117, 115, 107,
	96, 101, 131, 114, 132, 102, 122, 121, 123, 0,
	388, 0, 145, 161, 174, 406, 472, 167, 168, 169,
	170, 0, 0, 0, 383, 381, 103, 142, 106, 113,
	136, 172, 128, 140, 90, 160, 143, 404, 405, 402,
	403, 439, 440, 481, 482, 483, 457, 398, 0, 468,
	469, 0, 461, 0, 0, 0, 0, 389, 392, 393,
	394, 399, 0, 0, 443, 445, 466, 465, 464, 0,
	470, 486, 485, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 79, 0, 110, 490,
	135, 97, 162, 476, 460, 0, 430, 478, 408, 422,
	489, 423, 424, 453, 395, 438, 127, 420, 0, 411,
	386, 417, 387, 409, 432, 95, 435, 407, 462, 441,
	109, 0, 484, 111, 448, 0, 144, 120, 0, 0,
	434, 467, 436, 458, 429, 454, 401, 447, 479, 421,
	451, 480, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 450, 475, 419, 452,
	385, 449, 0, 390, 396, 488, 473, 414, 415, 0,
	0, 0, 0, 0, 0, 0, 433, 437, 455, 427,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 0,
	446, 0, 0, 0, 397, 391, 0, 431, 0, 0,
	0, 400, 0, 413, 456, 0, 384, 459, 471, 428,
	189, 474, 426, 425, 477, 133, 0, 0, 147, 100,
	99, 108, 463, 410, 418, 91, 416, 139, 129, 159,
	444, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 373, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 382, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 388, 0,
	145, 161, 174, 406, 472, 167, 168, 169, 170, 0,
	0, 0, 383, 381, 376, 375, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 404, 405, 402, 403, 439,
	440, 481, 482, 483, 457, 398, 0, 468, 469, 0,
	461, 0, 0, 0, 0, 389, 392, 393, 394, 399,
	0, 0, 443, 445, 466, 465, 464, 0, 470, 486,
	485, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 79, 0, 110, 490, 135, 97,
	162, 127, 0, 0, 892, 0, 277, 0, 0, 0,
	95, 0, 274, 0, 0, 109, 0, 318, 111, 0,
	0, 144, 120, 0, 0, 0, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	275, 297, 296, 299, 300, 301, 302, 0, 0, 88,
	298, 303, 304, 305, 0, 0, 272, 288, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 268, 0, 0, 0, 329, 0, 287, 0, 0,
	283, 284, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 327, 0,
	133, 0, 0, 147, 100, 99, 108, 0, 0, 0,
	91, 0, 139, 129, 159, 0, 130, 138, 112, 151,
	134, 158, 190, 166, 149, 165, 80, 148, 157, 89,
	141, 82, 155, 146, 118, 104, 105, 81, 0, 137,
	94, 98, 93, 126, 152, 153, 92, 173, 85, 164,
	84, 86, 163, 125, 150, 156, 119, 116, 83, 154,
	117, 115, 107, 96, 101, 131, 114, 132, 102, 122,
	121, 123, 0, 0, 0, 145, 161, 174, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 124, 87, 103,
	142, 106, 113, 136, 172, 128, 140, 90, 160, 143,
	319, 328, 325, 326, 323, 324, 322, 321, 320, 330,
	311, 312, 313, 314, 316, 0, 0, 0, 0, 0,
	343, 344, 345, 346, 347, 348, 349, 342, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 331, 332, 333,
	334, 335, 336, 337, 338, 341, 339, 340, 315, 79,
	0, 110, 171, 135, 97, 162, 127, 0, 0, 0,
	0, 277, 0, 0, 0, 95, 0, 274, 0, 0,
	109, 0, 318, 111, 0, 0, 144, 120, 0, 0,
	0, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 537, 275, 297, 296, 299, 300,
	301, 302, 0, 0, 88, 298, 303, 304, 305, 0,
	0, 272, 288, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 0, 0, 0, 0,
	329, 0, 287, 0, 0, 283, 284, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 327, 0, 133, 0, 0, 147, 100,
	99, 108, 0, 0, 0, 91, 0, 139, 129, 159,
	0, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 0, 0,
	145, 161, 174, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 319, 328, 325, 326, 323,
	324, 322, 321, 320, 330, 311, 312, 313, 314, 316,
	0, 0, 0, 0, 0, 343, 344, 345, 346, 347,
	348, 349, 342, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 331, 332, 333, 334, 335, 336, 337, 338,
	341, 339, 340, 315, 79, 0, 110, 171, 135, 97,
	162, 127, 0, 0, 0, 0, 277, 0, 0, 0,
	95, 0, 274, 0, 0, 109, 0, 318, 111, 0,
	0, 144, 120, 0, 0, 0, 0, 309, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	275, 297, 296, 299, 300, 301, 302, 0, 0, 88,
	298, 303, 304, 305, 0, 0, 272, 288, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	286, 268, 0, 0, 0, 329, 0, 287, 0, 0,
	283, 284, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 327, 0,
	133, 0, 0, 147, 100, 99, 108, 0, 0, 0,
	91, 0, 139, 129, 159, 0, 130, 138, 112, 151,
	134, 158, 190, 166, 149, 165, 80, 148, 157, 89,
	141, 82, 155, 146, 118, 104, 105, 81, 0, 137,
	94, 98, 93, 126, 152, 153, 92, 173, 85, 164,
	84, 86, 163, 125, 150, 156, 119, 116, 83, 154,
	117, 115, 107, 96, 101, 131, 114, 132, 102, 122,
	121, 123, 0, 0, 0, 145, 161, 174, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 124, 87, 103,
	142, 106, 113, 136, 172, 128, 140, 90, 160, 143,
	319, 328, 325, 326, 323, 324, 322, 321, 320, 330,
	311, 312, 313, 314, 316, 0, 0, 0, 0, 0,
	343, 344, 345, 346, 347, 348, 349, 342, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 331, 332, 333,
	334, 335, 336, 337, 338, 341, 339, 340, 315, 79,
	0, 110, 171, 135, 97, 162, 127, 0, 0, 0,
	0, 277, 0, 0, 0, 95, 0, 274, 0, 0,
	109, 0, 318, 111, 0, 0, 144, 120, 0, 0,
	0, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	984, 0, 52, 0, 0, 275, 297, 296, 299, 300,
	301, 302, 0, 0, 88, 298, 303, 304, 305, 0,
	0, 272, 288, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 0, 0, 0, 0,
	329, 0, 287, 0, 0, 283, 284, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 327, 0, 133, 0, 0, 147, 100,
	99, 108, 0, 0, 0, 91, 0, 139, 129, 159,
	0, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 0, 0,
	145, 161, 174, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 319, 328, 325, 326, 323,
	324, 322, 321, 320, 330, 311, 312, 313, 314, 316,
	0, 0, 0, 0, 0, 343, 344, 345, 346, 347,
	348, 349, 342, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 331, 332, 333, 334, 335, 336, 337, 338,
	341, 339, 340, 315, 79, 23, 110, 171, 135, 97,
	162, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 277, 0, 0, 0, 95, 0, 274, 0,
	0, 109, 0, 318, 111, 0, 0, 144, 120, 0,
	0, 0, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 275, 297, 296, 299,
	300, 301, 302, 0, 0, 88, 298, 303, 304, 305,
	0, 0, 272, 288, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 0, 0, 0,
	0, 329, 0, 287, 0, 0, 283, 284, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 327, 0, 133, 0, 0, 147,
	100, 99, 108, 0, 0, 0, 91, 0, 139, 129,
	159, 0, 130, 138, 112, 151, 134, 158, 190, 166,
	149, 165, 80, 148, 157, 89, 141, 82, 155, 146,
	118, 104, 105, 81, 0, 137, 94, 98, 93, 126,
	152, 153, 92, 173, 85, 164, 84, 86, 163, 125,
	150, 156, 119, 116, 83, 154, 117, 115, 107, 96,
	101, 131, 114, 132, 102, 122, 121, 123, 0, 0,
	0, 145, 161, 174, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 124, 87, 103, 142, 106, 113, 136,
	172, 128, 140, 90, 160, 143, 319, 328, 325, 326,
	323, 324, 322, 321, 320, 330, 311, 312, 313, 314,
	316, 0, 0, 0, 0, 0, 343, 344, 345, 346,
	347, 348, 349, 342, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 331, 332, 333, 334, 335, 336, 337,
	338, 341, 339, 340, 315, 79, 0, 110, 642, 135,
	97, 162, 127, 0, 0, 0, 0, 277, 0, 0,
	0, 95, 0, 274, 0, 0, 109, 0, 318, 111,
	0, 0, 144, 120, 0, 0, 0, 0, 309, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 275, 297, 296, 299, 300, 301, 302, 0, 0,
	88, 298, 303, 304, 305, 0, 0, 272, 288, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 286, 0, 0, 0, 0, 329, 0, 287, 0,
	0, 283, 284, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 327,
	0, 133, 0, 0, 147, 100, 99, 108, 0, 0,
	0, 91, 0, 139, 129, 159, 0, 130, 138, 112,
	151, 134, 158, 190, 166, 149, 165, 80, 148, 157,
	89, 141, 82, 155, 146, 118, 104, 105, 81, 0,
	137, 94, 98, 93, 126, 152, 153, 92, 173, 85,
	164, 84, 86, 163, 125, 150, 156, 119, 116, 83,
	154, 117, 115, 107, 96, 101, 131, 114, 132, 102,
	122, 121, 123, 0, 0, 0, 145, 161, 174, 0,
	0, 167, 168, 169, 170, 0, 0, 0, 124, 87,
	103, 142, 106, 113, 136, 172, 128, 140, 90, 160,
	143, 319, 328, 325, 326, 323, 324, 322, 321, 320,
	330, 311, 312, 313, 314, 316, 0, 0, 0, 0,
	0, 550, 551, 552, 553, 554, 558, 559, 563, 564,
	572, 571, 570, 573, 574, 576, 575, 577, 555, 556,
	557, 560, 561, 562, 565, 566, 569, 567, 568, 315,
	79, 0, 110, 171, 135, 97, 162, 127, 0, 0,
	0, 0, 277, 0, 0, 0, 95, 0, 274, 0,
	0, 109, 0, 318, 111, 0, 0, 144, 120, 0,
	0, 0, 0, 309, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 275, 297, 296, 299,
	300, 301, 302, 0, 0, 88, 298, 303, 304, 305,
	0, 0, 272, 288, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 286, 0, 0, 0,
	0, 329, 0, 287, 0, 0, 283, 284, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 327, 0, 133, 0, 0, 147,
	100, 99, 108, 0, 0, 0, 91, 0, 139, 129,
	159, 0, 130, 138, 112, 151, 134, 158, 190, 166,
	149, 165, 80, 148, 157, 89, 141, 82, 155, 146,
	118, 104, 105, 81, 0, 137, 94, 98, 93, 126,
	152, 153, 92, 173, 85, 164, 84, 86, 163, 125,
	150, 156, 119, 116, 83, 154, 117, 115, 107, 96,
	101, 131, 114, 132, 102, 122, 121, 123, 0, 0,
	0, 145, 161, 174, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 124, 87, 103, 142, 106, 113, 136,
	172, 128, 140, 90, 160, 143, 319, 328, 325, 326,
	323, 324, 322, 321, 320, 330, 311, 312, 313, 314,
	316, 0, 0, 0, 0, 0, 343, 344, 345, 346,
	347, 348, 349, 342, 350, 351, 352, 353, 354, 355,
	356, 357, 358, 331, 332, 333, 334, 335, 336, 337,
	338, 341, 339, 340, 315, 79, 127, 110, 171, 135,
	97, 162, 0, 0, 0, 95, 0, 0, 0, 0,
	109, 0, 318, 111, 0, 0, 144, 120, 0, 0,
	0, 0, 309, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 275, 297, 296, 299, 300,
	301, 302, 0, 0, 88, 298, 303, 304, 305, 0,
	0, 0, 288, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 286, 0, 0, 0, 0,
	329, 0, 287, 0, 0, 283, 284, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 327, 0, 133, 0, 0, 147, 100,
	99, 108, 0, 0, 0, 91, 0, 139, 129, 159,
	1559, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 0, 0,
	145, 161, 174, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 319, 328, 325, 326, 323,
	324, 322, 321, 320, 330, 311, 312, 313, 314, 316,
	0, 0, 0, 0, 0, 343, 344, 345, 346, 347,
	348, 349, 342, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 331, 332, 333, 334, 335, 336, 337, 338,
	341, 339, 340, 315, 79, 127, 110, 171, 135, 97,
	162, 0, 0, 0, 95, 0, 0, 0, 0, 109,
	0, 318, 111, 0, 0, 144, 120, 0, 0, 0,
	0, 309, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 275, 297, 296, 299, 300, 301,
	302, 0, 0, 88, 298, 303, 304, 305, 0, 0,
	0, 288, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 286, 0, 0, 0, 0, 329,
	0, 287, 0, 0, 283, 284, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 327, 0, 133, 0, 0, 147, 100, 99,
	108, 0, 0, 0, 91, 0, 139, 129, 159, 0,
	130, 138, 112, 151, 134, 158, 190, 166, 149, 165,
	80, 148, 157, 89, 141, 82, 155, 146, 118, 104,
	105, 81, 0, 137, 94, 98, 93, 126, 152, 153,
	92, 173, 85, 164, 84, 86, 163, 125, 150, 156,
	119, 116, 83, 154, 117, 115, 107, 96, 101, 131,
	114, 132, 102, 122, 121, 123, 0, 0, 0, 145,
	161, 174, 0, 0, 167, 168, 169, 170, 0, 0,
	0, 124, 87, 103, 142, 106, 113, 136, 172, 128,
	140, 90, 160, 143, 319, 328, 325, 326, 323, 324,
	322, 321, 320, 330, 311, 312, 313, 314, 316, 0,
	0, 0, 0, 0, 343, 344, 345, 346, 347, 348,
	349, 342, 350, 351, 352, 353, 354, 355, 356, 357,
	358, 331, 332, 333, 334, 335, 336, 337, 338, 341,
	339, 340, 315, 79, 0, 110, 171, 135, 97, 162,
	127, 0, 0, 0, 591, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 109, 0, 0, 111, 0, 0,
	144, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	0, 595, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 588, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 133,
	0, 0, 147, 100, 99, 108, 0, 0, 0, 91,
	0, 139, 129, 159, 0, 130, 138, 112, 151, 134,
	158, 190, 166, 149, 165, 80, 148, 157, 89, 141,
	82, 155, 146, 118, 104, 105, 81, 0, 137, 94,
	98, 93, 126, 152, 153, 92, 173, 85, 164, 84,
	86, 163, 125, 150, 156, 119, 116, 83, 154, 117,
	115, 107, 96, 101, 131, 114, 132, 102, 122, 121,
	123, 0, 0, 0, 145, 161, 174, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 124, 87, 103, 142,
	106, 113, 136, 172, 128, 140, 90, 160, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	227, 228, 229, 230, 234, 235, 239, 240, 248, 247,
	246, 249, 250, 252, 251, 253, 231, 232, 233, 236,
	237, 238, 241, 242, 245, 243, 244, 0, 79, 0,
	110, 171, 135, 97, 162, 127, 0, 0, 0, 719,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 109,
	0, 0, 111, 0, 0, 144, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 225, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 133, 0, 0, 147, 100, 99,
	108, 0, 0, 0, 91, 0, 139, 129, 159, 0,
	130, 138, 112, 151, 134, 158, 190, 166, 149, 165,
	80, 148, 157, 89, 141, 82, 155, 146, 118, 104,
	105, 81, 0, 137, 94, 98, 93, 126, 152, 153,
	92, 173, 85, 164, 84, 86, 163, 125, 150, 156,
	119, 116, 83, 154, 117, 115, 107, 96, 101, 131,
	114, 132, 102, 122, 121, 123, 0, 0, 0, 145,
	161, 174, 0, 0, 167, 168, 169, 170, 0, 0,
	0, 124, 87, 103, 142, 106, 113, 136, 172, 128,
	140, 90, 160, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 227, 228, 229, 230, 234,
	235, 239, 240, 248, 247, 246, 249, 250, 252, 251,
	253, 231, 232, 233, 236, 237, 238, 241, 242, 245,
	243, 244, 0, 79, 0, 110, 171, 135, 97, 162,
	127, 0, 0, 0, 719, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 109, 0, 0, 111, 0, 0,
	144, 120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 225, 0, 0, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 133,
	0, 0, 147, 100, 99, 108, 0, 0, 0, 91,
	0, 139, 129, 159, 0, 717, 138, 112, 151, 134,
	158, 190, 166, 149, 165, 80, 148, 157, 89, 141,
	82, 155, 146, 118, 104, 105, 81, 0, 137, 94,
	98, 93, 126, 152, 153, 92, 173, 85, 164, 84,
	86, 163, 125, 150, 156, 119, 116, 83, 154, 117,
	115, 107, 96, 101, 131, 114, 132, 102, 122, 121,
	123, 0, 0, 0, 145, 161, 174, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 124, 87, 103, 142,
	106, 113, 136, 172, 128, 140, 90, 160, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	227, 228, 229, 230, 234, 235, 239, 240, 248, 247,
	246, 249, 250, 252, 251, 253, 231, 232, 233, 236,
	237, 238, 241, 242, 245, 243, 244, 127, 79, 0,
	110, 171, 135, 97, 162, 0, 95, 0, 0, 0,
	0, 109, 0, 0, 111, 0, 0, 144, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 225, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 133, 0, 0, 147,
	100, 99, 108, 0, 0, 0, 91, 0, 139, 129,
	159, 0, 130, 138, 112, 151, 134, 158, 190, 166,
	149, 165, 80, 148, 157, 89, 141, 82, 155, 146,
	118, 104, 105, 81, 0, 137, 94, 98, 93, 126,
	152, 153, 92, 173, 85, 164, 84, 86, 163, 125,
	150, 156, 119, 116, 83, 154, 117, 115, 107, 96,
	101, 131, 114, 132, 102, 122, 121, 123, 0, 0,
	0, 145, 161, 174, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 124, 87, 103, 142, 106, 113, 136,
	172, 128, 140, 90, 160, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 227, 228, 229,
	230, 234, 235, 239, 240, 248, 247, 246, 249, 250,
	252, 251, 253, 231, 232, 233, 236, 237, 238, 241,
	242, 245, 243, 244, 127, 79, 0, 110, 171, 135,
	97, 162, 0, 95, 0, 0, 0, 0, 109, 0,
	0, 111, 0, 0, 144, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 595, 0, 0, 0, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 133, 0, 0, 147, 100, 99, 108,
	0, 0, 0, 91, 0, 139, 129, 159, 0, 130,
	138, 112, 151, 134, 158, 190, 166, 149, 165, 80,
	148, 157, 89, 141, 82, 155, 146, 118, 104, 105,
	81, 0, 137, 94, 98, 93, 126, 152, 153, 92,
	173, 85, 164, 84, 86, 163, 125, 150, 156, 119,
	116, 83, 154, 117, 115, 107, 96, 101, 131, 114,
	132, 102, 122, 121, 123, 0, 0, 0, 145, 161,
	174, 0, 0, 167, 168, 169, 170, 0, 0, 0,
	124, 87, 103, 142, 106, 113, 136, 172, 128, 140,
	90, 160, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 227, 228, 229, 230, 234, 235,
	239, 240, 248, 247, 246, 249, 250, 252, 251, 253,
	231, 232, 233, 236, 237, 238, 241, 242, 245, 243,
	244, 127, 79, 0, 110, 171, 135, 97, 162, 0,
	95, 0, 0, 0, 0, 109, 0, 0, 111, 0,
	0, 144, 120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 604, 614, 615, 607,
	608, 609, 610, 611, 612, 613, 606, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	133, 0, 0, 147, 100, 99, 108, 0, 0, 0,
	91, 0, 139, 129, 159, 0, 130, 138, 112, 151,
	134, 158, 190, 166, 149, 165, 80, 148, 157, 89,
	141, 82, 155, 146, 118, 104, 105, 81, 0, 137,
	94, 98, 93, 126, 152, 153, 92, 173, 85, 164,
	84, 86, 163, 125, 150, 156, 119, 116, 83, 154,
	117, 115, 107, 96, 101, 131, 114, 132, 102, 122,
	121, 123, 0, 0, 0, 145, 161, 174, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 124, 87, 103,
	142, 106, 113, 136, 172, 128, 140, 90, 160, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 109, 0, 0, 111, 0, 0, 144, 120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 79,
	0, 110, 171, 135, 97, 162, 88, 0, 0, 0,
	0, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	74, 0, 69, 0, 0, 0, 75, 133, 0, 0,
	147, 100, 99, 108, 0, 0, 0, 91, 0, 139,
	129, 159, 0, 130, 138, 112, 151, 134, 158, 71,
	166, 149, 165, 80, 148, 157, 89, 141, 82, 155,
	146, 118, 104, 105, 81, 0, 137, 94, 98, 93,
	126, 152, 153, 92, 173, 85, 164, 84, 86, 163,
	125, 150, 156, 119, 116, 83, 154, 117, 115, 107,
	96, 101, 131, 114, 132, 102, 122, 121, 123, 0,
	0, 0, 145, 161, 174, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 124, 87, 103, 142, 106, 113,
	136, 172, 128, 140, 90, 160, 143, 0, 72, 0,
	0, 0, 0, 0, 0, 23, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 109, 0, 0, 111, 0, 0, 144, 120, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 110, 171,
	135, 97, 162, 52, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 133, 0, 0, 147,
	100, 99, 108, 0, 0, 0, 91, 0, 139, 129,
	159, 0, 130, 138, 112, 151, 134, 158, 190, 166,
	149, 165, 80, 148, 157, 89, 141, 82, 155, 146,
	118, 104, 105, 81, 0, 137, 94, 98, 93, 126,
	152, 153, 92, 173, 85, 164, 84, 86, 163, 125,
	150, 156, 119, 116, 83, 154, 117, 115, 107, 96,
	101, 131, 114, 132, 102, 122, 121, 123, 0, 0,
	0, 145, 161, 174, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 124, 87, 103, 142, 106, 113, 136,
	172, 128, 140, 90, 160, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 23, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	109, 0, 0, 111, 0, 0, 144, 120, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 110, 642, 135,
	97, 162, 52, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 133, 0, 0, 147, 100,
	99, 108, 0, 0, 0, 91, 0, 139, 129, 159,
	0, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 0, 0,
	145, 161, 174, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 109,
	0, 0, 111, 0, 0, 144, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 843, 0, 0,
	844, 0, 0, 88, 79, 0, 110, 642, 135, 97,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 133, 0, 0, 147, 100, 99,
	108, 0, 0, 0, 91, 0, 139, 129, 159, 0,
	130, 138, 112, 151, 134, 158, 190, 166, 149, 165,
	80, 148, 157, 89, 141, 82, 155, 146, 118, 104,
	105, 81, 0, 137, 94, 98, 93, 126, 152, 153,
	92, 173, 85, 164, 84, 86, 163, 125, 150, 156,
	119, 116, 83, 154, 117, 115, 107, 96, 101, 131,
	114, 132, 102, 122, 121, 123, 0, 0, 0, 145,
	161, 174, 0, 0, 167, 168, 169, 170, 0, 0,
	0, 124, 87, 103, 142, 106, 113, 136, 172, 128,
	140, 90, 160, 143, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 737, 0, 0, 109, 0,
	0, 111, 0, 0, 144, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 736, 0, 0, 0, 0,
	0, 0, 88, 79, 0, 110, 171, 135, 97, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 133, 0, 0, 147, 100, 99, 108,
	0, 0, 0, 91, 0, 139, 129, 159, 0, 130,
	138, 112, 151, 134, 158, 190, 166, 149, 165, 80,
	148, 157, 89, 141, 82, 155, 146, 118, 104, 105,
	81, 0, 137, 94, 98, 93, 126, 152, 153, 92,
	173, 85, 164, 84, 86, 163, 125, 150, 156, 119,
	116, 83, 154, 117, 115, 107, 96, 101, 131, 114,
	132, 102, 122, 121, 123, 0, 0, 0, 145, 161,
	174, 0, 0, 167, 168, 169, 170, 0, 0, 0,
	124, 87, 103, 142, 106, 113, 136, 172, 128, 140,
	90, 160, 143, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 109, 0, 0,
	111, 0, 0, 144, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 79, 0, 110, 171, 135, 97, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 133, 0, 0, 147, 100, 99, 108, 0,
	0, 0, 91, 0, 139, 129, 159, 0, 130, 138,
	112, 151, 134, 158, 190, 166, 149, 165, 80, 148,
	157, 89, 141, 82, 155, 146, 118, 104, 105, 81,
	0, 137, 94, 98, 93, 126, 152, 153, 92, 173,
	85, 164, 84, 86, 163, 125, 150, 156, 119, 116,
	83, 154, 117, 115, 107, 96, 101, 131, 114, 132,
	102, 122, 121, 123, 0, 0, 0, 145, 161, 174,
	0, 0, 167, 168, 169, 170, 0, 0, 0, 124,
	87, 103, 142, 106, 113, 136, 172, 128, 140, 90,
	160, 143, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 109, 0, 0, 111,
	0, 0, 144, 120, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 79, 0, 110, 171, 135, 97, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 133, 0, 0, 147, 100, 99, 108, 0, 0,
	0, 91, 0, 139, 129, 159, 0, 130, 138, 112,
	151, 134, 158, 190, 166, 149, 165, 80, 148, 157,
	89, 141, 82, 155, 146, 118, 104, 105, 81, 0,
	137, 94, 98, 93, 126, 152, 153, 92, 173, 85,
	164, 84, 86, 163, 125, 150, 156, 119, 116, 83,
	154, 117, 115, 107, 96, 101, 131, 114, 132, 102,
	122, 121, 123, 0, 0, 0, 145, 161, 174, 0,
	0, 167, 168, 169, 170, 0, 0, 0, 124, 87,
	103, 142, 106, 113, 136, 172, 128, 140, 90, 160,
	143, 127, 0, 0, 0, 0, 0, 0, 0, 696,
	95, 0, 0, 0, 0, 109, 0, 0, 111, 0,
	0, 144, 120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	79, 0, 110, 171, 135, 97, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	133, 0, 0, 147, 100, 99, 108, 0, 0, 0,
	91, 0, 139, 129, 159, 0, 130, 138, 112, 151,
	134, 158, 190, 166, 149, 165, 80, 148, 157, 89,
	141, 82, 155, 146, 118, 104, 105, 81, 0, 137,
	94, 98, 93, 126, 152, 153, 92, 173, 85, 164,
	84, 86, 163, 125, 150, 156, 119, 116, 83, 154,
	117, 115, 107, 96, 101, 131, 114, 132, 102, 122,
	121, 123, 0, 0, 0, 145, 161, 174, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 124, 87, 103,
	142, 106, 113, 136, 172, 128, 140, 90, 160, 143,
	0, 368, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 109, 0, 0, 111, 0, 0, 144, 120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 79,
	0, 110, 171, 135, 97, 162, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 133, 0, 0,
	147, 100, 99, 108, 0, 0, 0, 91, 0, 139,
	129, 159, 0, 130, 138, 112, 151, 134, 158, 190,
	166, 149, 165, 80, 148, 157, 89, 141, 82, 155,
	146, 118, 104, 105, 81, 0, 137, 94, 98, 93,
	126, 152, 153, 92, 173, 85, 164, 84, 86, 163,
	125, 150, 156, 119, 116, 83, 154, 117, 115, 107,
	96, 101, 131, 114, 132, 102, 122, 121, 123, 0,
	0, 0, 145, 161, 174, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 124, 87, 103, 142, 106, 113,
	136, 172, 128, 140, 90, 160, 143, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 109, 0, 0, 111, 0, 0, 144, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 79, 0, 110, 171,
	135, 97, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 189, 0, 0, 0, 0, 133, 0, 0, 147,
	100, 99, 108, 0, 0, 0, 91, 0, 139, 129,
	159, 0, 130, 138, 112, 151, 134, 158, 190, 166,
	149, 165, 80, 148, 157, 89, 141, 82, 155, 146,
	118, 104, 105, 81, 0, 137, 94, 98, 93, 126,
	152, 153, 92, 173, 85, 164, 84, 86, 163, 125,
	150, 156, 119, 116, 83, 154, 117, 115, 107, 96,
	101, 131, 114, 132, 102, 122, 121, 123, 0, 0,
	0, 145, 161, 174, 0, 0, 167, 168, 169, 170,
	0, 0, 0, 124, 87, 103, 142, 106, 113, 136,
	172, 128, 140, 90, 160, 143, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	109, 0, 0, 111, 0, 0, 144, 120, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 88, 79, 0, 110, 171, 135,
	97, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 133, 0, 0, 147, 100,
	99, 108, 0, 0, 0, 91, 0, 139, 129, 159,
	0, 130, 138, 112, 151, 134, 158, 190, 166, 149,
	165, 80, 148, 157, 89, 141, 82, 155, 146, 118,
	104, 105, 81, 0, 137, 94, 98, 93, 126, 152,
	153, 92, 173, 85, 164, 84, 86, 163, 125, 150,
	156, 119, 116, 83, 154, 117, 115, 107, 96, 101,
	131, 114, 132, 102, 122, 121, 123, 0, 0, 0,
	145, 161, 174, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 124, 87, 103, 142, 106, 113, 136, 172,
	128, 140, 90, 160, 143, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 109,
	0, 0, 111, 0, 0, 144, 120, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 79, 0, 110, 171, 135, 97,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 133, 0, 0, 147, 100, 99,
	108, 0, 0, 0, 91, 0, 139, 129, 159, 0,
	130, 138, 112, 151, 134, 158, 190, 166, 149, 165,
	80, 148, 157, 89, 141, 82, 155, 146, 118, 104,
	105, 81, 0, 137, 94, 98, 93, 126, 152, 153,
	92, 173, 85, 164, 84, 86, 163, 125, 150, 156,
	119, 116, 83, 154, 117, 115, 107, 96, 101, 131,
	114, 132, 102, 122, 121, 123, 0, 0, 0, 145,
	161, 174, 0, 0, 167, 168, 169, 170, 0, 0,
	0, 124, 87, 103, 142, 106, 113, 136, 172, 128,
	140, 90, 160, 143, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 109, 0,
	0, 111, 0, 0, 144, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 79, 0, 110, 171, 135, 97, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 133, 0, 0, 147, 100, 99, 108,
	0, 0, 0, 91, 0, 139, 129, 159, 0, 130,
	138, 112, 151, 134, 158, 190, 166, 149, 165, 80,
	148, 157, 89, 141, 82, 155, 146, 118, 104, 105,
	81, 0, 137, 94, 98, 93, 126, 152, 153, 92,
	173, 85, 164, 84, 86, 163, 125, 150, 156, 119,
	116, 83, 154, 117, 115, 107, 96, 101, 131, 114,
	132, 102, 122, 121, 123, 0, 0, 0, 145, 161,
	174, 0, 0, 167, 168, 169, 170, 0, 0, 0,
	124, 87, 103, 142, 106, 113, 136, 172, 128, 140,
	90, 160, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 110, 171, 135, 97, 162,
}

var yyPact = [...]int{
	2225, -1000, -204, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 835, 857, -1000, -1000, -1000, -1000, -1000, -1000, 654,
	10040, 67, 92, 20, 11969, 91, 1579, 12596, -1000, 6,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 855, 100, -1000,
	-1000, 9309, -1000, -1000, -1000, 812, 832, 102, 823, 701,
	-1000, 6673, 66, 11125, 11760, 5878, -1000, 552, 85, 12596,
	-122, 12178, 60, 60, 60, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 87, 12596, -1000, 12596, 55,
	547, 55, 55, 55, 12596, -1000, 118, -1000, -1000, -1000,
	-1000, 12596, 527, 735, 62, 3654, 3654, 3654, 3654, 11,
	3654, -77, 672, -1000, -1000, -1000, -1000, 3654, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 423,
	629, -1000, 644, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 744, 7739, 7474, 835, -1000, 100,
	-1000, -1000, -1000, 733, -1000, -1000, 241, 845, -1000, 8522,
	115, -1000, 7739, 833, 631, -1000, -1000, 631, -1000, -1000,
	105, -1000, -1000, 8257, 8257, 8257, 8257, 8257, 8257, 8257,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 631, -1000, 7209, 631,
	631, 631, 631, 631, 631, 631, 631, 7739, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 11543,
	589, 789, -1000, -1000, -1000, 800, 10498, 9052, 12596, 571,
	-1000, 591, 5600, -98, -1000, -1000, -1000, 188, 10916, -1000,
	-1000, -1000, 731, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 551, -1000, 2569, 523, 3654, 73, 658, 491, 190,
	482, 12596, 12596, 3654, 69, 12596, 790, 670, 12596, 466,
	450, -1000, 5322, -1000, 3654, 3654, 3654, 3654, 3654, 3654,
	3654, 3654, -1000, -1000, -1000, -1000, -1000, -1000, 3654, 3654,
	-1000, -58, -1000, 12596, -1000, 701, -1000, -1000, 9309, 631,
	12178, -1000, 851, 156, 453, 111, 610, -1000, 371, 817,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
	631, 631, 631, 631, 631, 631, 631, 631, 812, 423,
	701, 10707, 682, -1000, -1000, 12596, -1000, 7739, 7739, 314,
	-1000, 9566, -1000, -1000, -1000, -1000, 4210, 174, 8257, 355,
	168, 8257, 8257, 8257, 8257, 8257, 8257, 8257, 8257, 8257,
	8257, 8257, 8257, 8257, 8257, 8257, 354, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 441, -1000, 100, 475, 475,
	136, 136, 136, 136, 136, 136, 9823, 6143, 423, 543,
	184, 7209, 9309, 6673, 6673, 7739, 7739, 12387, 12387, 6673,
	806, 204, 184, 12387, -1000, 423, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 6673, 6673, 6673, 6673, 423, 423, 6673,
	6673, 6673, 6673, 6673, 423, 423, 423, 423, 806, 806,
	6673, 6673, 6673, 806, 6673, 6673, 806, 6673, 6673, 6673,
	6673, 806, 6673, 6673, 6673, 26, 12596, -1000, 12387, 11125,
	11125, 11125, 11125, 11125, 11125, -1000, 693, 685, -1000, 687,
	686, 695, 9309, -1000, 489, 10498, 122, 631, -1000, 9309,
	26, 572, 11125, 12596, -1000, -1000, 5044, 591, -98, 586,
	-1000, -85, -92, 6938, 123, -1000, -1000, -1000, -1000, 3376,
	158, 226, -53, -1000, -1000, -1000, 633, -1000, 633, 633,
	633, 633, -21, -21, -21, -21, -1000, -1000, -1000, -1000,
	-1000, 652, 643, -1000, 633, 633, 633, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 642, 642, 642, 634, 634, 660, -1000,
	12596, -170, 438, 3654, 783, 3654, -1000, 1575, -1000, 12596,
	-1000, -1000, 12596, 3654, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 275,
	-1000, -1000, -1000, 806, -1000, -1000, 429, 109, -1000, 713,
	7739, 7739, 4766, 7474, -1000, -1000, -1000, -1000, 744, -1000,
	806, 834, -1000, 725, 719, 6673, -1000, -1000, 174, 177,
	-1000, -1000, 320, -1000, -1000, -1000, -1000, 108, 631, -1000,
	798, -1000, -1000, -1000, -1000, 355, 8257, 8257, 8257, 332,
	798, 2104, 1614, 1395, 136, 135, 135, 124, 124, 124,
	124, 124, 391, 391, -1000, -1000, -1000, 423, -1000, -1000,
	-1000, 423, 6673, 588, -1000, -1000, 7739, -1000, 423, 476,
	476, 365, 230, 628, -1000, 104, 625, 476, 6673, 218,
	-1000, 7739, 423, -1000, 476, 423, 476, 476, -131, -131,
	423, 476, 423, 476, 476, -131, -131, -131, -131, 6673,
	6673, 476, 476, 476, 6673, 476, 476, 6673, 476, 476,
	476, 476, 6673, 476, 476, 476, 97, 631, -1000, 626,
	-1000, 187, 789, 641, 641, 669, 457, -1000, -1000, -1000,
	-1000, 684, -1000, 653, -1000, -1000, -1000, -1000, -1000, 84,
	81, 79, 12178, -1000, 840, 11125, 598, -1000, -1000, 586,
	-98, -105, -1000, -1000, -1000, 184, -1000, 416, 585, 3098,
	-1000, -1000, -1000, -1000, -1000, -1000, 636, 769, 166, 175,
	405, -1000, -1000, 749, -1000, 237, -57, -1000, -1000, 361,
	-21, -21, -1000, -1000, 123, 730, 123, 123, 123, 382,
	382, -1000, -1000, -1000, -1000, 357, -1000, -1000, -1000, 352,
	-1000, 665, 12178, 3654, -1000, 4488, -1000, -1000, -1000, -1000,
	-1000, -1000, 337, 243, 159, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 25, -1000, 3654, -1000,
	291, 12596, 12596, 682, 793, 12178, 12178, 707, 184, 184,
	103, -1000, -1000, 12596, -1000, -1000, -1000, -1000, 590, -1000,
	-1000, -1000, 3932, 6673, -1000, 332, 798, 1897, -1000, 8257,
	8257, -1000, -1000, 476, 6673, 184, -1000, -1000, -1000, 51,
	354, 51, 8257, 8257, 4766, 8257, 8257, -165, 599, 196,
	-1000, 7739, 173, -1000, -1000, -1000, -1000, -1000, -1000, 11334,
	-1000, -131, -131, -131, -131, -131, -1000, -1000, -1000, -1000,
	476, 476, -131, -131, -131, 476, -131, -131, 476, -131,
	-131, -131, -131, 476, -131, -131, -131, 663, 12387, 631,
	-1000, 10269, 12178, 835, 12387, 7739, 7739, -1000, -1000, 7739,
	635, -1000, -1000, 7739, -1000, -1000, -1000, 631, 631, 631,
	427, -1000, 835, 598, -1000, -1000, -1000, -94, -100, -1000,
	-1000, 3376, -1000, 3376, 12178, -1000, 403, 394, -1000, -1000,
	662, 77, -1000, -1000, -1000, 557, 123, 123, -1000, 182,
	-1000, -1000, -1000, 471, -1000, 458, 580, 456, 12596, -1000,
	-1000, 579, -1000, 186, -1000, -1000, 12178, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12178,
	12596, -1000, -1000, -1000, -1000, -1000, 12178, -1000, -1000, 380,
	7739, -1000, -1000, 6673, 631, 94, -1000, -1000, 4488, -1000,
	840, 836, 11125, -1000, -1000, 423, -1000, 8257, 798, 798,
	-1000, -1000, 423, 633, 633, -1000, 633, 634, -1000, 633,
	-3, 633, -4, 423, 423, 576, 1839, -1000, 494, 1045,
	631, -129, -1000, 184, 7739, -1000, 150, -1000, -1000, -1000,
	-1000, -1000, -131, -131, -1000, -1000, -1000, -1000, -131, -1000,
	-1000, -131, -1000, -1000, -1000, -1000, -131, -1000, -1000, -1000,
	-1000, 772, 556, 575, -1000, -1000, 6408, 423, 429, 427,
	812, -1000, 184, 184, 184, 12178, 184, 12178, 12178, 12178,
	8787, 12178, 812, -1000, -1000, -1000, -1000, 3098, -1000, 422,
	-1000, 633, -1000, -1000, -54, 849, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -21, 364, -21,
	333, -1000, 331, 3654, 4488, 3376, -1000, 632, -1000, -1000,
	-1000, -1000, 779, -1000, 184, 607, -1000, 12178, 836, 837,
	830, 598, -1000, 798, -1000, -1000, 95, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8257, 8257, -1000, 8257,
	8257, 8257, 423, 363, 184, 423, 820, -1000, -1000, -1000,
	-1000, -1000, 764, -1000, 631, -1000, -1000, 99, -1000, -1000,
	401, -1000, 399, 399, 399, 122, -1000, -1000, 117, 12178,
	-1000, 165, -1000, -110, 123, -1000, 123, 490, 472, -1000,
	-1000, -1000, 12178, 631, 11125, -1000, 837, -1000, 7474, 7474,
	836, -1000, -1000, 1767, 1767, 1767, 1767, -2, -1000, -1000,
	-1000, 7739, 848, -1000, 631, -1000, 100, 12178, -1000, -1000,
	-1000, -1000, -1000, 117, -1000, 393, 183, 356, -1000, 232,
	763, -1000, 752, -1000, -1000, -1000, -1000, -1000, 392, 24,
	598, -1000, -1000, 184, -1000, 578, -1000, 184, -1000, 837,
	-1000, -1000, -1000, -1000, 423, 83, -195, 597, 12387, 575,
	423, -1000, -1000, -1000, 248, -1000, -1000, -1000, 338, -1000,
	-1000, 658, 389, -1000, 12178, 836, 7474, -1000, -1000, 706,
	-168, -198, 423, 574, -1000, -1000, -1000, -170, -1000, 24,
	718, 837, -1000, -1000, 705, -1000, -1000, -1000, -1000, 21,
	-1000, -193, 18, -196, 631, -199, 7998, -1000, 1767, 423,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 1112, 14, 414, 1110, 1109, 1099, 1097, 1096, 1095,
	1093, 1092, 1090, 1086, 1085, 1084, 1080, 1079, 1075, 1074,
	1073, 1072, 1071, 1069, 149, 1068, 1067, 1066, 87, 44,
	67, 1065, 1063, 37, 1623, 34, 40, 143, 4, 1061,
	24, 1060, 1058, 68, 123, 1057, 78, 53, 56, 1056,
	77, 1051, 61, 1049, 1046, 1041, 1706, 1039, 1038, 20,
	32, 1037, 1033, 1032, 1031, 62, 581, 1030, 1028, 1027,
	1018, 1015, 1008, 1006, 999, 46, 16, 994, 9, 22,
	18, 992, 107, 10, 991, 45, 990, 989, 17, 7,
	987, 8, 986, 52, 116, 128, 71, 36, 50, 47,
	21, 55, 29, 19, 6, 76, 59, 985, 43, 60,
	42, 984, 983, 377, 982, 978, 971, 970, 969, 967,
	179, 401, 966, 965, 963, 962, 70, 585, 13, 1629,
	481, 69, 960, 959, 957, 1391, 66, 30, 27, 956,
	28, 1602, 33, 951, 950, 31, 949, 946, 944, 943,
	942, 941, 940, 51, 938, 937, 921, 65, 35, 913,
	910, 54, 26, 909, 905, 902, 41, 57, 887, 48,
	885, 884, 883, 882, 23, 39, 881, 12, 880, 11,
	879, 878, 2, 876, 25, 875, 3, 874, 5, 38,
	873, 872, 0, 80, 864, 863, 81,
}

var yyR1 = [...]int{
	0, 190, 191, 191, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 6, 3, 3, 3, 3,
	41, 42, 42, 46, 46, 4, 4, 5, 5, 7,
	7, 27, 27, 8, 9, 9, 9, 194, 194, 50,
	50, 101, 101, 10, 10, 10, 10, 106, 106, 110,
	110, 110, 111, 111, 111, 111, 143, 143, 11, 11,
	11, 11, 11, 11, 11, 188, 188, 187, 186, 186,
	185, 185, 184, 16, 171, 172, 172, 172, 167, 146,
	146, 146, 146, 149, 149, 147, 147, 147, 147, 147,
	147, 147, 148, 148, 148, 148, 148, 150, 150, 150,
	150, 150, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 152, 152, 152,
	152, 152, 152, 152, 152, 166, 166, 153, 153, 161,
	161, 162, 162, 162, 159, 159, 160, 160, 163, 163,
	163, 154, 154, 154, 154, 154, 154, 154, 156, 156,
	164, 164, 157, 157, 157, 158, 158, 165, 165, 165,
	165, 165, 155, 155, 168, 168, 180, 180, 179, 179,
	179, 170, 170, 176, 176, 176, 176, 176, 169, 169,
	178, 178, 177, 173, 173, 173, 174, 174, 174, 175,
	175, 175, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 183, 181, 181, 182, 182, 13, 14, 14,
	14, 14, 14, 15, 15, 17, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 118,
	118, 115, 115, 116, 116, 117, 117, 117, 119, 119,
	119, 144, 144, 144, 19, 19, 21, 21, 22, 23,
	20, 20, 20, 20, 20, 195, 24, 25, 25, 26,
	26, 26, 30, 30, 30, 28, 28, 29, 29, 35,
	35, 34, 34, 36, 36, 36, 36, 94, 94, 94,
	95, 95, 132, 132, 132, 131, 131, 131, 131, 39,
	39, 40, 40, 43, 43, 44, 44, 44, 58, 58,
	100, 100, 102, 102, 45, 45, 45, 45, 45, 47,
	47, 48, 48, 49, 49, 139, 139, 138, 138, 138,
	137, 137, 137, 51, 51, 55, 53, 52, 52, 52,
	52, 54, 54, 57, 57, 56, 56, 59, 59, 59,
	59, 60, 60, 37, 37, 37, 37, 37, 37, 37,
	114, 114, 62, 62, 61, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 74, 74, 74, 74, 74, 74,
	63, 63, 63, 63, 63, 63, 63, 33, 33, 75,
	75, 75, 82, 76, 76, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 70, 70,
	70, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 69, 69, 69, 69, 69,
	69, 69, 196, 196, 71, 71, 71, 71, 31, 31,
	31, 31, 31, 142, 142, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 86, 86,
	32, 32, 84, 84, 85, 87, 87, 83, 83, 83,
	65, 65, 65, 65, 65, 65, 65, 65, 67, 67,
	67, 88, 88, 77, 77, 38, 38, 89, 89, 90,
	90, 91, 91, 92, 92, 93, 93, 96, 96, 96,
	97, 97, 97, 97, 98, 98, 98, 64, 64, 64,
	64, 64, 64, 99, 99, 99, 99, 103, 103, 78,
	78, 80, 80, 79, 81, 104, 104, 108, 105, 105,
	109, 109, 109, 107, 107, 107, 134, 134, 134, 112,
	112, 120, 120, 121, 121, 113, 113, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 123, 123, 123,
	124, 124, 125, 125, 125, 133, 133, 129, 129, 130,
	130, 135, 135, 136, 136, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 192, 193,
	140, 141, 141, 141,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 6, 7, 5, 10, 9, 11, 12,
	2, 1, 3, 3, 6, 1, 3, 1, 3, 7,
	8, 1, 1, 8, 8, 7, 6, 1, 1, 1,
	3, 0, 4, 3, 4, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 8,
	4, 6, 5, 5, 5, 0, 2, 1, 0, 2,
	1, 3, 3, 4, 4, 1, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 2, 2, 2, 2, 2, 0, 3,
	0, 1, 0, 3, 3, 0, 2, 0, 2, 1,
	2, 1, 0, 2, 5, 4, 1, 2, 2, 3,
	2, 0, 1, 2, 3, 3, 2, 2, 1, 1,
	1, 3, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 6, 7, 7, 12, 7, 7, 7, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 5, 4, 6,
	5, 4, 4, 3, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 3, 3, 3, 3, 4, 3,
	6, 4, 2, 4, 2, 2, 2, 2, 3, 1,
	1, 0, 1, 0, 1, 0, 2, 2, 0, 2,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	2, 2, 2, 2, 2, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 0, 1, 0,
	1, 1, 3, 1, 2, 3, 5, 2, 4, 7,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 7,
	1, 3, 1, 3, 4, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 4, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 6, 6, 6, 6, 8, 8, 6, 8, 8,
	9, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 0, 2, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 1, 0, 2, 1,
	1, 0, 3, 1, 3, 2, 2, 0, 1, 1,
	0, 2, 4, 4, 0, 2, 4, 2, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -190, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -17, -18, -19, -21, -22, -23,
	-20, -3, -4, 6, 7, -27, 9, 10, 30, -16,
	113, 114, 116, 115, 141, 117, 134, 50, 153, 154,
	156, 157, 25, 135, 136, 139, 140, -41, -192, 8,
	236, 279, 54, -191, 283, -91, 15, -26, 5, -24,
	-195, -24, -24, -24, -24, -24, -171, 54, -125, 122,
	71, 149, 228, 119, 120, 126, -129, 57, -127, 276,
	153, 164, 158, 185, 177, 175, 178, 215, 66, 156,
	224, 137, 173, 169, 167, 27, 190, 281, 168, 132,
	131, 191, 195, 216, 162, 163, 218, 189, 133, 32,
	278, 35, 145, 219, 193, 188, 184, 187, 161, 183,
	39, 197, 196, 198, 214, 180, 170, 18, 222, 140,
	143, 192, 194, 127, 147, 280, 220, 166, 144, 139,
	223, 157, 217, 226, 38, 202, 160, 130, 154, 151,
	181, 146, 171, 172, 186, 159, 182, 155, 148, 141,
	225, 203, 282, 179, 176, 152, 150, 207, 208, 209,
	210, 279, 221, 174, 204, -113, 122, 124, 120, 120,
	121, 122, 228, 119, 120, -56, -135, 57, -127, 122,
	149, 120, 107, 178, 113, 205, 121, 32, 147, -144,
	120, -115, 150, 207, 208, 209, 210, 57, 217, 216,
	211, -135, 155, -140, -140, -140, -140, -140, 6, -2,
	-42, -46, -137, -135, -128, 59, 247, 248, 249, 250,
	251, 264, 265, 266, 252, 253, 267, 268, 269, 254,
	255, 270, 271, 273, 274, 272, 258, 257, 256, 259,
	260, 262, 261, 263, -97, 17, 16, -5, -3, -192,
	6, 20, 21, -30, 40, 41, -25, -36, 98, -37,
	-135, -61, 73, -66, 29, 57, -127, 23, -65, -62,
	-83, -81, -82, 107, 108, 96, 97, 104, 74, 109,
	-70, -68, -69, -71, -72, -73, 59, 58, 67, 60,
	61, 62, 63, 68, 69, 70, -129, -79, -192, 44,
	45, 237, 238, 239, 240, 275, 241, 76, 34, 227,
	235, 234, 233, 231, 232, 229, 230, 125, 228, 102,
	236, 264, 265, 266, 267, 268, 269, 270, 271, 273,
	274, 272, 254, 247, 248, 249, 250, 251, 252, 253,
	255, 256, 257, 258, 259, 260, 261, 262, 263, -113,
	-40, -43, -44, -45, -58, -82, -192, -56, 11, -50,
	-56, -105, -143, 155, -109, 217, 216, -130, -107, -129,
	-126, 215, 178, 214, 118, 72, 22, 24, 200, 247,
	75, 107, 248, 249, 250, 16, 76, 106, 237, 251,
	113, 48, 229, 230, 227, 228, 205, 29, 10, 25,
	135, 21, 100, 115, 79, 80, 138, 23, 136, 70,
	19, 51, 11, 13, 14, 125, 124, 91, 121, 46,
	8, 109, 26, 88, 42, 28, 44, 89, 17, 231,
	232, 31, 275, 254, 142, 255, 102, 49, 36, 73,
	68, 52, 71, 15, 47, 90, 116, 236, 45, 119,
	6, 242, 30, 134, 258, 257, 256, 43, 239, 240,
	260, 120, 206, 78, 123, 69, 5, 126, 9, 50,
	53, 233, 234, 235, 34, 262, 261, 263, 77, 12,
	279, -172, -167, 57, 121, -56, 236, -129, -121, 125,
	-121, -121, 120, -56, -56, -120, 125, 57, -120, -120,
	-120, -56, 110, -56, 57, 30, 228, 57, 147, 120,
	148, 122, -141, -192, -130, -141, -141, -141, 151, 152,
	-141, -116, 212, 52, -141, -24, -193, 56, 55, 22,
	-192, -98, 19, 31, -37, -135, -92, -93, -37, -128,
	247, 248, 249, 250, 251, 264, 265, 266, 252, 253,
	267, 268, 269, 254, 255, 270, 271, 273, 274, 272,
	258, 257, 256, 259, 260, 262, 261, 263, -91, -2,
	-24, 36, -28, 21, 65, 11, -132, 72, 71, 88,
	-131, 22, 57, -127, -128, 59, 110, -37, -63, 91,
	73, 89, 90, 75, 93, 92, 103, 96, 97, 98,
	99, 100, 101, 102, 94, 95, 106, 81, 82, 83,
	84, 85, 86, 87, -114, -192, -82, -192, 111, 112,
	-66, -66, -66, -66, -66, -66, -66, -192, -2, -76,
	-37, -192, 279, -192, -192, -192, -192, -192, -192, -192,
	-192, -86, -37, -192, -196, -192, -196, -196, -196, -196,
	-196, -196, -196, -192, -192, -192, -192, -192, -192, -192,
	-192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
	-192, -192, -192, -192, -192, -192, -192, -192, -192, -192,
	-192, -192, -192, -192, -192, -57, 26, -56, 30, 55,
	-51, -55, -53, -52, -54, 42, 46, 48, 43, 44,
	45, 49, -139, 22, -40, -192, -138, 143, -137, 22,
	-56, -50, -194, 55, 11, 53, 55, -105, 155, -106,
	-110, 218, 220, 81, -134, -129, 59, 29, 30, 56,
	55, -146, -149, -151, -150, -152, -147, -148, 175, 176,
	107, 179, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 30, 137, 171, 172, 173, 174, 191, 192,
	193, 194, 195, 196, 197, 198, 158, 159, 160, 161,
	162, 163, 164, 166, 167, 168, 169, 170, 57, -141,
	122, -188, 53, 57, 73, 57, -56, -56, -141, 123,
	-56, 23, 52, -56, 57, 57, -136, -135, -126, -141,
	-141, -141, -141, -141, -141, -141, -141, -141, -141, -118,
	206, 213, -56, -30, -46, -82, -99, -129, 9, 91,
	55, 18, 110, 55, -96, 24, 25, -96, -97, -193,
	-30, -67, -129, 60, 63, -29, 43, -56, -37, -37,
	-74, 68, 73, 69, 70, -131, 98, -136, -130, -126,
	-66, -75, -79, -82, 64, 91, 89, 90, 75, -66,
	-66, -66, -66, -66, -66, -66, -66, -66, -66, -66,
	-66, -66, -66, -66, -142, 57, 59, 57, -65, -65,
	-129, -35, 21, -34, -36, -193, 55, -193, -2, -34,
	-34, -37, -37, -83, -129, -135, -83, -34, -28, -84,
	-85, 77, -83, -193, -34, -35, -34, -34, -193, -193,
	-36, -34, -36, -34, -34, -193, -193, -193, -193, -28,
	-28, -34, -34, -34, -28, -34, -34, -28, -34, -34,
	-34, -34, -28, -34, -34, -34, -101, 143, -56, -104,
	-108, -83, -43, -44, -44, -44, -43, -44, 42, 42,
	42, 47, 42, 47, 42, -52, -137, -193, -59, 50,
	124, 51, -192, -137, -101, 53, -40, -56, -109, -106,
	55, 219, 221, 222, 52, -37, -158, 106, -173, -174,
	-175, -130, 59, 60, -167, -168, -176, 127, 130, 126,
	-169, 121, 28, -163, 68, 73, -159, 203, -153, 54,
	-153, -153, -153, -153, -157, 178, -157, -157, -157, 54,
	54, -153, -153, -153, -161, 54, -161, -161, -162, 54,
	-162, -133, 53, -56, -186, 279, -187, 57, -141, 23,
	-141, -122, 118, 115, 116, -183, 114, 200, 178, 66,
	29, 15, 237, 143, 282, 57, 144, -56, -56, -141,
	-117, 11, 91, -28, -193, 55, 110, 38, -37, -37,
	-136, -93, -98, -112, 19, 11, 34, 34, -34, 68,
	69, 70, 110, -192, -75, -66, -66, -66, -33, 138,
	72, -193, -193, -34, 55, -37, -193, -193, -193, 55,
	53, 22, 55, 11, 110, 55, 11, -193, -34, -87,
	-85, 79, -37, -193, -193, -193, -193, -193, -94, 243,
	-94, -193, -193, -193, -193, -193, -94, -94, -94, -94,
	-34, -34, -193, -193, -193, -34, -193, -193, -34, -193,
	-193, -193, -193, -34, -193, -193, -193, -64, 30, 34,
	-2, -192, -192, -60, 55, 12, 81, -48, -47, 52,
	53, -48, -49, 52, -47, 42, 42, 121, 121, 121,
	-102, -129, -60, -40, -60, -110, -111, 223, 220, 226,
	57, 55, -175, 81, 54, 28, -169, -169, 57, 57,
	-154, 29, 68, -160, 204, 60, -157, -157, -158, 30,
	-158, -158, -158, -166, 59, -166, 60, 60, 52, -129,
	-141, -185, -184, -130, -140, -189, 149, 128, 129, 132,
	131, 57, 121, 28, 127, 130, 143, 126, -189, 149,
	-123, -124, 123, 22, 121, 28, 143, -141, -119, 89,
	12, -135, -135, -29, 22, -129, -129, 39, 110, -56,
	-39, -60, 11, 98, -130, -35, -33, 72, -66, -66,
	-193, -36, -145, 107, 175, 137, 173, 169, 189, 180,
	202, 171, 203, -142, -145, -66, -66, -130, -66, -66,
	276, -91, 80, -37, 78, -129, -192, -94, -94, -94,
	-94, -94, -193, -193, -95, -94, -95, -95, -193, -95,
	-95, -193, -95, -95, -95, -95, -193, -95, -95, -95,
	-103, 52, -104, -78, -80, -79, -192, -2, -99, -102,
	-91, -108, -37, -37, -37, 54, -37, -192, -192, -192,
	-193, 55, -91, -60, 220, 224, 225, -174, -175, -178,
	-177, -129, 57, 57, -156, 52, 59, 60, 61, 68,
	227, 67, 56, -158, -158, 57, 107, 56, 55, 56,
	55, 56, 55, -56, 55, 81, -140, -129, -140, -129,
	-56, -140, -129, 59, -37, -34, -82, 110, -60, -88,
	13, -40, -193, -66, -193, -153, -153, -153, -162, -153,
	163, -153, 163, -193, -193, -193, 55, 19, -193, 55,
	19, -192, -32, 242, -37, -91, 143, -95, -95, -95,
	-95, -95, 27, -103, 55, -193, -193, -193, -193, -97,
	-100, -129, -100, -100, -100, -138, -129, -97, 56, 55,
	-153, -164, 200, 9, -157, 59, -157, 60, 60, -141,
	-184, -175, 54, 26, 11, -129, -88, -89, 14, 16,
	-60, -157, 57, -66, -66, -66, -66, -66, -193, 59,
	-193, 16, 28, -80, 34, -2, -192, 55, 56, -193,
	-193, -193, -59, -180, -179, 53, 133, 66, -177, -165,
	127, 28, 126, 227, -158, -158, 56, 56, -100, -192,
	-40, -89, -90, -37, -128, -77, -38, -37, -128, -88,
	-193, -193, -193, -193, -31, 91, 279, -76, 9, -78,
	-2, -129, -179, 57, -170, 81, 59, -155, 66, 28,
	28, 56, -181, -182, 143, -60, 55, -89, -193, 277,
	49, 280, -91, -104, -193, 60, 59, -188, -193, 55,
	-129, -88, -38, 39, 278, 281, -193, -186, -182, 34,
	-89, 39, 145, 279, 146, 280, -192, 281, -66, 142,
	-193, -193,
}

var yyDef = [...]int{
	0, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 561, 0, 285, 285, 285, 285, 285, 285, 0,
	632, 615, 0, 0, 0, 0, -2, 275, 276, 0,
	278, 279, 880, 880, 880, 880, 880, 0, 0, 41,
	42, 0, 878, 1, 3, 570, 0, 0, 289, 292,
	287, 0, 615, 0, 0, 0, 68, 0, 0, 839,
	0, 840, 613, 613, 613, 633, 634, 637, 638, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 0, 0, 616, 0, 611,
	0, 611, 611, 611, 0, 234, 365, 641, 642, 839,
	840, 0, 0, 0, 0, 881, 881, 881, 881, 0,
	881, 263, 252, 254, 255, 256, 257, 881, 272, 273,
	262, 274, 277, 280, 281, 282, 283, 284, 285, 35,
	30, 31, 0, 350, 351, 352, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 574, 0, 0, 561, 37, 0,
	285, 290, 291, 295, 293, 294, 286, 0, 303, 312,
	0, 373, 0, 378, 380, -2, -2, 0, 415, 416,
	417, 418, 419, 0, 0, 0, 0, 0, 0, 0,
	442, 443, 444, 445, 446, 447, 540, 541, 542, 543,
	544, 545, 546, 547, 382, 383, 537, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 502,
	502, 502, 502, 502, 502, 502, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 323, 324, 325, 345, 0, 347, 0, 0,
	49, 53, 0, 830, 598, -2, -2, 0, 0, 639,
	640, -2, 759, -2, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 0, 85, 0, 0, 881, 0, 75, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 235, 881, 881, 881, 881, 881, 881,
	881, 881, 244, 882, 883, 245, 246, 247, 881, 881,
	249, 0, 264, 0, 258, 292, 36, 879, 0, 0,
	0, 22, 0, 0, 571, 0, 562, 563, 567, 567,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 570, 35,
	292, 0, 297, 296, 288, 0, 304, 0, 0, 0,
	313, 0, 315, 316, 317, 318, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 401, 402,
	403, 404, 405, 406, 379, 0, 393, 0, 0, 0,
	435, 436, 437, 438, 439, 440, 0, 299, 35, 0,
	413, 0, 846, 0, 0, 0, 0, 0, 0, 0,
	295, 0, 529, 0, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 295,
	0, 0, 0, 295, 0, 0, 295, 0, 0, 0,
	0, 295, 0, 0, 0, 51, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 0, 356, 0,
	0, 0, 0, 346, 0, 0, 367, 803, 348, 0,
	-2, 0, 0, 0, 47, 48, 0, 54, 830, 56,
	57, 0, 0, 0, 165, 606, 607, 608, 604, 193,
	0, 148, 144, 90, 91, 92, 137, 94, 137, 137,
	137, 137, 162, 162, 162, 162, 120, 121, 122, 123,
	124, 0, 0, 107, 137, 137, 137, 111, 127, 128,
	129, 130, 131, 132, 133, 134, 95, 96, 97, 98,
	99, 100, 101, 139, 139, 139, 141, 141, 635, 70,
	0, 78, 0, 881, 0, 881, 83, 0, 209, 0,
	228, 612, 0, 881, 231, 232, 366, 643, 644, 236,
	237, 238, 239, 240, 241, 242, 243, 248, 251, 265,
	259, 260, 253, 295, 32, 33, 0, 583, 575, 0,
	0, 0, 0, 0, 565, 568, 569, 566, 574, 38,
	295, 0, 548, 0, 0, 0, 298, 25, 374, 375,
	377, 394, 0, 396, 398, 314, 305, 0, 538, -2,
	384, 385, 409, 410, 411, 0, 0, 0, 0, 407,
	389, 0, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 434, 513, 514, 0, 432, 433,
	441, 0, 0, 300, 301, 412, 0, 593, 35, 0,
	0, 0, 0, 0, 537, 0, 0, 0, 0, 535,
	532, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 371,
	595, 0, 322, 341, 341, 343, 0, 338, 354, 355,
	357, 0, 359, 0, 361, 362, 326, 327, 328, 0,
	0, 0, 0, 349, 371, 0, 371, 50, 599, 55,
	0, 0, 60, 61, 600, 601, 602, 0, 84, 194,
	196, 199, 200, 201, 86, 87, 0, 0, 0, 0,
	0, 188, 189, 151, 149, 0, 146, 145, 93, 0,
	162, 162, 114, 115, 165, 0, 165, 165, 165, 0,
	0, 108, 109, 110, 102, 0, 103, 104, 105, 0,
	106, 0, 0, 881, 72, 0, 76, 77, 73, 614,
	74, 880, 0, 0, 627, 210, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 0, 227, 881, 230,
	268, 0, 0, 297, 0, 0, 0, 0, 572, 573,
	0, 564, 23, 0, 609, 610, 549, 550, 319, 395,
	397, 399, 0, 299, 386, 407, 390, 0, 387, 0,
	0, 381, 448, 0, 0, 414, -2, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 0,
	533, 0, 0, 493, 504, 505, 506, 507, 468, 0,
	469, 0, 0, 0, 0, 0, 475, 476, 477, 478,
	0, 0, 310, 310, 310, 0, 310, 310, 0, 310,
	310, 310, 310, 0, 310, 310, 310, 587, 0, 0,
	-2, 0, 0, 561, 0, 0, 0, 334, 342, 0,
	0, 335, 336, 0, 337, 358, 360, 0, 0, 0,
	0, 332, 561, 371, 46, 58, 59, 0, 0, 65,
	166, 0, 197, 0, 0, 183, 0, 0, 186, 187,
	158, 0, 150, 89, 147, 0, 165, 165, 116, 0,
	117, 118, 119, 0, 135, 0, 0, 0, 0, 636,
	71, 79, 80, 0, 202, 880, 0, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 880, 0,
	0, 880, 628, 629, 630, 631, 0, 229, 250, 0,
	0, 266, 267, 0, 0, 585, 584, 576, 0, 24,
	371, 551, 0, 306, 539, 0, 388, 0, 408, 391,
	449, 302, 0, 137, 137, 518, 137, 141, 521, 137,
	523, 137, 526, 0, 0, 0, 0, 538, 0, 0,
	0, 530, 492, 536, 0, 307, 561, 470, 471, 472,
	473, 474, 310, 310, 453, 311, 454, 455, 310, 457,
	458, 310, 460, 461, 462, 463, 310, 465, 466, 467,
	39, 0, 587, 577, 589, 591, 0, 35, 0, 0,
	570, 596, 372, 597, 339, 0, 344, 0, 0, 0,
	347, 0, 570, 45, 62, 63, 64, 195, 198, 0,
	190, 137, 184, 185, 160, 0, 152, 153, 154, 155,
	156, 157, 138, 112, 113, 163, 164, 162, 0, 162,
	0, 142, 0, 881, 0, 0, 203, 0, 204, 206,
	207, 208, 0, 269, 270, 0, 34, 0, 551, 557,
	0, 320, 450, 392, 481, 515, 162, 519, 520, 522,
	524, 525, 527, 483, 482, 484, 0, 0, 487, 0,
	0, 0, 0, 0, 534, 0, 0, 451, 452, 456,
	459, 464, 0, 40, 0, 592, -2, 0, 52, 43,
	0, 330, 0, 0, 0, 367, 333, 44, 175, 0,
	192, 167, 161, 0, 165, 136, 165, 0, 0, 69,
	81, 82, 0, 0, 0, 586, 557, 27, 0, 0,
	551, 516, 517, 0, 0, 0, 0, 508, 491, 531,
	308, 0, 0, 590, 0, -2, 0, 0, 340, 368,
	369, 370, 329, 174, 176, 0, 181, 0, 191, 172,
	0, 169, 171, 159, 125, 126, 140, 143, 0, 0,
	371, 26, 558, 559, 560, 552, 553, 555, 556, 557,
	485, 486, 488, 489, 0, 0, 0, 561, 0, 580,
	35, 331, 177, 178, 0, 182, 180, 88, 0, 168,
	170, 75, 0, 223, 0, 551, 0, 28, 490, 0,
	0, 0, 0, 588, -2, 179, 173, 78, 222, 0,
	0, 557, 554, 509, 0, 512, 309, 205, 224, 0,
	29, 510, 0, 0, 0, 0, 0, 511, 0, 0,
	225, 226,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 74, 3, 3, 3, 101, 93, 3,
	54, 56, 98, 96, 55, 97, 110, 99, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 283,
	82, 81, 83, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 103, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 92, 3, 104,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 75,
	76, 77, 78, 79, 80, 84, 85, 86, 87, 88,
	89, 90, 91, 94, 95, 100, 102, 105, 106, 107,
	108, 109, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:311
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:316
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:317
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:321
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:344
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 23:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:352
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 24:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:356
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 25:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:362
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 26:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:369
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 27:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:375
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[7].expr), GroupBy: GroupBy(yyDollar[8].exprs), Having: NewWhere(HavingStr, yyDollar[9].expr)}
		}
	case 28:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:379
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[8].tableExprs, Where: NewWhere(WhereStr, yyDollar[9].expr), GroupBy: GroupBy(yyDollar[10].exprs), Having: NewWhere(HavingStr, yyDollar[11].expr)}
		}
	case 29:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:383
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
		}
	case 30:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:389
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:395
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:399
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:405
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].subquery, As: yyDollar[1].tableIdent}, nil}
		}
	case 34:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:409
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].subquery, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:415
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:419
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:425
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:429
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:436
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:448
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:460
		{
			yyVAL.str = InsertStr
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:464
		{
			yyVAL.str = ReplaceStr
		}
	case 43:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:470
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), TableExprs: yyDollar[3].tableExprs, Exprs: yyDollar[5].updateExprs, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:476
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:480
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:484
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:489
		{
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:494
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:498
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
			yyVAL.partitions = nil
		}
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:507
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:513
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:517
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:521
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:535
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:541
		{
			yyVAL.setExpr = yyDollar[3].setExpr
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent("tx_read_only"), Expr: NewIntVal([]byte("0"))}
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:549
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent("tx_read_only"), Expr: NewIntVal([]byte("1"))}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent("tx_isolation"), Expr: NewStrVal([]byte("repeatable read"))}
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent("tx_isolation"), Expr: NewStrVal([]byte("read committed"))}
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:563
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent("tx_isolation"), Expr: NewStrVal([]byte("read uncommitted"))}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent("tx_isolation"), Expr: NewStrVal([]byte("serializable"))}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.str = SessionStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.str = GlobalStr
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:583
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:588
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, NewName: yyDollar[7].tableName}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &DDL{Action: CreateStr, NewName: yyDollar[3].tableName.ToViewName()}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &DDL{Action: CreateStr, NewName: yyDollar[5].tableName.ToViewName()}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:601
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[3].colIdent,
				Type:   yyDollar[4].colIdent,
				Params: yyDollar[5].vindexParams,
			}}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:609
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:618
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:622
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:633
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:661
		{
			yyVAL.ddl = &DDL{Action: CreateStr, NewName: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:675
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:690
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].optVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].optVal
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:909
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:914
		{
			yyVAL.optVal = nil
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:918
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:923
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:927
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:945
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:953
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:962
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:972
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:985
		{
			yyVAL.optVal = nil
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:989
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:993
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:997
		{
			yyVAL.optVal = NewFloatVal(yyDollar[2].bytes)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.optVal = NewBitVal(yyDollar[2].bytes)
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.optVal = nil
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.optVal = NewValArg(yyDollar[3].bytes)
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1032
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1045
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.colKeyOpt = colKey
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1075
		{
			yyVAL.optVal = nil
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1085
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = ""
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Spatial: true, Unique: false}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Unique: true}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Unique: true}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(string(yyDollar[2].bytes)), Unique: false}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1162
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].optVal}
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1177
		{
			yyVAL.str = ""
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1185
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1207
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1211
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1215
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 203:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1225
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 204:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1229
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 205:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1233
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 206:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1246
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1256
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, Table: yyDollar[4].tableName, NewName: yyDollar[7].tableName}
		}
	case 208:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1261
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName(), NewName: yyDollar[3].tableName.ToViewName()}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1270
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 222:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1289
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 225:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1305
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 226:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1309
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 227:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1315
		{
			yyVAL.statement = &DDL{Action: RenameStr, Table: yyDollar[3].tableName, NewName: yyDollar[5].tableName}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1321
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, Table: yyDollar[4].tableName, IfExists: exists}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1329
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, NewName: yyDollar[5].tableName}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1334
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, Table: yyDollar[4].tableName.ToViewName(), IfExists: exists}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1342
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1346
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1352
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName, NewName: yyDollar[3].tableName}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1375
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1380
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1384
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1388
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1392
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1396
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1424
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[4].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[4].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Extended: yyDollar[2].str, Full: yyDollar[3].str, DbName: yyDollar[5].str, Filter: yyDollar[6].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[4].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1434
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1438
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1442
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), OnTable: yyDollar[4].tableName}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1446
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1468
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = ""
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = "extended "
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = "full "
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = ""
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1518
		{
			yyVAL.showFilter = nil
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1522
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1526
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = ""
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = SessionStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = GlobalStr
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.statement = &Begin{}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1560
		{
			yyVAL.statement = &Begin{}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.statement = &Commit{}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.statement = &Rollback{}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &OtherRead{}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &OtherRead{}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &OtherRead{}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1599
		{
			setAllowComments(yylex, true)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1609
		{
			yyVAL.bytes2 = nil
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = UnionStr
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = UnionAllStr
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = UnionDistinctStr
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = ""
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = SQLCacheStr
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = ""
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = DistinctStr
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = ""
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = StraightJoinHint
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1663
		{
			yyVAL.selectExprs = nil
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1695
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1706
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 309:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1710
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1715
		{
			yyVAL.over = nil
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.over = yyDollar[1].over
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1726
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1785
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1789
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1795
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1799
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1819
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1832
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1836
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1840
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1844
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1848
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1856
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1860
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1866
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1871
		{
			yyVAL.empty = struct{}{}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.empty = struct{}{}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1876
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = JoinStr
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = JoinStr
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = CrossJoinStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = StraightJoinStr
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = LeftJoinStr
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = LeftJoinStr
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = RightJoinStr
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = RightJoinStr
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = NaturalJoinStr
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1974
		{
			yyVAL.indexHints = nil
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1978
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1986
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1991
		{
			yyVAL.expr = nil
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = ""
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2059
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2063
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2067
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2071
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2075
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2079
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2083
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = IsNullStr
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = IsNotNullStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = IsTrueStr
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = IsNotTrueStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = IsFalseStr
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = IsNotFalseStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = EqualStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = LessThanStr
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = GreaterThanStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = LessEqualStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = GreaterEqualStr
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = NotEqualStr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2148
		{
			yyVAL.expr = nil
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2326
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2330
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2334
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 451:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2344
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 452:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2348
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2352
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2356
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2360
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2384
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2388
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2392
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2396
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2400
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2404
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2408
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2421
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2425
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2429
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2433
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2437
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2441
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2445
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2449
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2453
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2457
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2467
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 481:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2475
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 482:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2479
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2483
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 484:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2487
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: nil}
		}
	case 485:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2491
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 486:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2495
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2499
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: nil}
		}
	case 488:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2503
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 489:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2507
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 490:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2511
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 491:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2515
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2519
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2523
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2537
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2583
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2587
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.str = ""
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.str = BooleanModeStr
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2605
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2609
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.str = QueryExpansionStr
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: string(yyDollar[3].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2645
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2659
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = nil
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = string("")
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2713
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.expr = nil
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2736
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.expr = &NullVal{}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.exprs = nil
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2823
		{
			yyVAL.expr = nil
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.orderBy = nil
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.order = &Order{Expr: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Direction: yyDollar[2].str}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = AscScr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = AscScr
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = DescScr
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2884
		{
			yyVAL.limit = nil
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2888
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2892
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2896
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = ""
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = ForUpdateStr
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = ShareModeStr
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2930
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2935
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2939
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2943
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2954
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2962
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2967
		{
			yyVAL.updateExprs = nil
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2971
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2977
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3023
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3043
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.bytes = []byte("charset")
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &Default{}
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3078
		{
			yyVAL.byt = 0
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.byt = 1
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3083
		{
			yyVAL.empty = struct{}{}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.empty = struct{}{}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.str = IgnoreStr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3115
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3128
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3135
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			decNesting(yylex)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3446
		{
			forceEOF(yylex)
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3451
		{
			forceEOF(yylex)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			forceEOF(yylex)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3459
		{
			forceEOF(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
